[{"/Volumes/butbut/code/testapi/plugintester/src/Client.ts":"1","/Volumes/butbut/code/testapi/plugintester/src/index.tsx":"2","/Volumes/butbut/code/testapi/plugintester/src/App.tsx":"3","/Volumes/butbut/code/testapi/plugintester/src/reportWebVitals.ts":"4","/Volumes/butbut/code/remix-testreact/src/index.tsx":"5","/Volumes/butbut/code/remix-testreact/src/reportWebVitals.ts":"6","/Volumes/butbut/code/remix-testreact/src/App.tsx":"7","/Volumes/butbut/code/remix-testreact/src/Client.ts":"8","/Volumes/butbut/code/remix-testreact/src/Matrix.ts":"9","/Volumes/butbut/code/remix-testreact/src/use-observable.ts":"10","/Volumes/butbut/code/remix-testreact/src/components/FileList.tsx":"11","/Volumes/butbut/code/remix-testreact/src/themes/theme.tsx":"12","/Volumes/butbut/code/remix-testreact/src/components/Rooms.tsx":"13","/Volumes/butbut/code/remix-testreact/src/components/RoomSearch.tsx":"14","/Volumes/butbut/code/remix-testreact/src/components/CreateRoom.tsx":"15"},{"size":16107,"mtime":1624531084000,"results":"16","hashOfConfig":"17"},{"size":520,"mtime":1617198243000,"results":"18","hashOfConfig":"17"},{"size":7249,"mtime":1622796021000,"results":"19","hashOfConfig":"17"},{"size":425,"mtime":1609233049000,"results":"20","hashOfConfig":"17"},{"size":1231,"mtime":1633178746000,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1630406755000,"results":"23","hashOfConfig":"22"},{"size":10426,"mtime":1633365299000,"results":"24","hashOfConfig":"22"},{"size":16815,"mtime":1633111526000,"results":"25","hashOfConfig":"22"},{"size":9695,"mtime":1633365997000,"results":"26","hashOfConfig":"22"},{"size":775,"mtime":1633098218000,"results":"27","hashOfConfig":"22"},{"size":2324,"mtime":1633365318000,"results":"28","hashOfConfig":"22"},{"size":173,"mtime":1633178603000,"results":"29","hashOfConfig":"22"},{"size":1347,"mtime":1633365299000,"results":"30","hashOfConfig":"22"},{"size":1891,"mtime":1633365413000,"results":"31","hashOfConfig":"22"},{"size":2148,"mtime":1633365423000,"results":"32","hashOfConfig":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bh2wdb",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"17xia0h",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"45"},"/Volumes/butbut/code/testapi/plugintester/src/Client.ts",["72","73","74","75","76","77","78"],"/Volumes/butbut/code/testapi/plugintester/src/index.tsx",[],["79","80"],"/Volumes/butbut/code/testapi/plugintester/src/App.tsx",["81","82","83","84","85","86"],"import { time } from \"console\";\nimport { useState } from \"react\";\nimport useBehaviorSubject from \"use-behavior-subject\";\nimport \"./App.css\";\nimport { WorkSpacePlugin } from \"./Client\";\nimport { Logger } from \"./logger\";\n\n\n\nexport const client = new WorkSpacePlugin();\n\n\n\nfunction App() {\n  \n  const [dir, setDir] = useState<string>(\"hardhat\");\n  const [result,setResult] = useState<string>()\n\n  const handleChange = ({ target }: any) => {\n    setDir(target.value);\n  };\n\n  const gettime = () => {\n    return Date.now()\n  }\n\n  const test = async ()=>{\n    setResult(\"\")\n    const r = await client.soltest()\n    setResult(\"test done\")\n  }\n\n  return (\n    <div className=\"App\">\n      <div>v5</div>\n      <div>{result}</div>\n      <a href='http://nu.nl' target=\"_blank\">testlink</a>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.zip()}>zip</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspush()}>ipfs push</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspull(dir)}>ipfs pull</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfsConfig()}>ipfs config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getAccounts()}>get accounts</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setSettings()}>set settings to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getSettings()}>get settings</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await test()}>run sol test</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.highlight(dir)}>highlight</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.addAnnotation(dir)}>annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.clearAnnotations(dir)}>clear annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.open(dir)}>openfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.read(dir)}>read</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.write(dir)}>write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.switchfile(dir)}>switch to file</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcurrentfile()}>getcurrentfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.importcontent(dir)}>import content resolve</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.fetch(dir)}>api test fetch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.axios(dir)}>api test axios</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activate()}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deactivate()}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getresult()}>get compilation result</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcompilerconfig()}>get compiler config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpace()}>get workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpaces()}>get workspaces</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.createWorkSpace(dir)}>create workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitinit(dir)}>git init</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitstatus(dir)}>git status</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlog()}>git log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcommit()}>git commit</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitadd(dir)}>git add</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitremove(dir)}>git rm</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlsfiles()}>git ls files</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitreadblob(dir)}>git read blob</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitresolveref()}>git resolve head</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranches()}>git branches</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranch(dir)}>git create branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcheckout(dir)}>git checkout</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcurrentbranch()}>git current branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.qr(dir)}>qr</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.wallet()}>connect to wallet</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.connect()}>connect to wallet2</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.dapp(dir)}>connect to dapp</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.changetoinjected()}>change to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.writetoCeramic()}>ceramic write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinatapush()}>pinata write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinlist()}>pinata list</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setCallBacks()}>callbacks</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.log(\"\")}>log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activatePlugin(dir)}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deActivatePlugin(dir)}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.debug(dir)}>debug</button>\n      <input\n        type=\"text\"\n        name=\"payloadBox\"\n        placeholder=\"Enter payload here...\"\n        value={dir}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Volumes/butbut/code/testapi/plugintester/src/reportWebVitals.ts",[],"/Volumes/butbut/code/remix-testreact/src/index.tsx",[],["87","88"],"/Volumes/butbut/code/remix-testreact/src/reportWebVitals.ts",[],"/Volumes/butbut/code/remix-testreact/src/App.tsx",["89","90","91","92","93","94","95","96","97","98","99","100"],"import { useContext, useEffect, useRef, useState } from \"react\";\nimport { useBehaviorSubject } from \"./use-observable\"\nimport \"./App.css\";\nimport { WorkSpacePlugin } from \"./Client\";\nimport { Logger } from \"./logger\";\nimport { MatrixRemix } from \"./Matrix\";\nimport { Accordion, AccordionContext, Alert, Button, Modal, useAccordionToggle } from 'react-bootstrap';\nimport { IncomingFile } from \"./types/types\";\nimport { FileListViewer } from \"./components/FileList\";\nimport { async } from \"rxjs\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { RoomSelector } from \"./components/Rooms\";\nimport { RoomSearch } from \"./components/RoomSearch\";\nimport { CreateRoom } from \"./components/CreateRoom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCaretDown, faCaretUp } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const client = new WorkSpacePlugin();\nexport const matrixClient = new MatrixRemix()\n\n\nfunction App() {\n  const connected = useBehaviorSubject(\n    matrixClient.connected\n  );\n  const rooms = useBehaviorSubject(\n    matrixClient.myRooms\n  );\n  const incomingFile = useBehaviorSubject(\n    matrixClient.incomingFile\n  );\n  const matrixMessage = useBehaviorSubject(\n    matrixClient.message\n  );\n  const [room, setRoom] = useState<string>(\"!FaLewgrNoxRxrSPmWM:matrix.org\");\n  const [result, setResult] = useState<string>()\n  const [username, setUsername] = useLocalStorage(\"usernam\", \"@filipmertens:matrix.org\")\n  const [password, setPassword] = useLocalStorage(\"password\", \"RzLIYi81!\")\n  const [autoSend, setAutoSend] = useState(false)\n  const [autoReceive, setAutoReceive] = useState(false)\n  const [incomingFiles, setIncomingFiles] = useState<IncomingFile[]>([{}])\n  const [loginToken, setLoginToken] = useLocalStorage('token', '')\n  const [isCallBack, setIsCallback] = useState<boolean>(false)\n  const filesRef = useRef(incomingFiles);\n\n  useEffect(() => {\n    filesRef.current = incomingFiles;\n  }, [incomingFiles]);\n\n  useEffect(() => {\n    console.log(\"ROOMS CHANGE\")\n    //setIncomingFiles([])\n  }, [rooms]);\n\n  useEffect(() => {\n    console.log(window.location.search)\n    let q = new URLSearchParams(window.location.search)\n    console.log(q.get('loginToken'))\n    if (q.get('loginToken') && q.get('loginToken') !== '') {\n      console.log('setting token')\n      setLoginToken(q.get('loginToken') || '')\n      setIsCallback(true)\n    }\n\n  }, []);\n\n  function addNewContract(file: IncomingFile) {\n    if (\n      filesRef.current?.findIndex(\n        (el: IncomingFile) => el.event_id === file.event_id\n      ) === -1\n    ) {\n      setIncomingFiles(filesRef.current.concat([{ ...file, hidden: false }]));\n      console.log(file, incomingFiles)\n      client.emit('statusChanged', {\n        key: incomingFiles.length,\n        type: 'success',\n        title: 'messages'\n      })\n    }\n  }\n\n  function removeFile(file: IncomingFile) {\n    let c = [...incomingFiles];\n    c = c.filter((x: IncomingFile) => {\n      return x.url !== file.url;\n    });\n    setIncomingFiles(c);\n  }\n\n  const handleChange = ({ target }: any) => {\n    setRoom(target.value);\n  };\n\n  const handleChangeToken = ({ target }: any) => {\n    setLoginToken(target.value);\n  };\n\n  useEffect(() => {\n    if (incomingFile) addNewContract(incomingFile)\n  }, [incomingFile]);\n\n\n  const onAutoSendChange = (event: any) => {\n    const target = event.target;\n    const value = target.checked;\n    client.autoSend = value\n    setAutoSend(value)\n    if (value) {\n      client.autoReceive = false\n      setAutoReceive(false)\n    }\n  }\n\n  const onAutoReceiveChange = (event: any) => {\n    const target = event.target;\n    const value = target.checked;\n    client.autoReceive = value\n    setAutoReceive(value)\n    if (value) {\n      client.autoSend = false\n      setAutoSend(false)\n    }\n  }\n\n  const userChange = ({ target }: any) => {\n    setUsername(target.value);\n  };\n\n  const passwordChange = ({ target }: any) => {\n    setPassword(target.value);\n  };\n\n  const connectMatrix = async () => {\n    await matrixClient.connect(username, password)\n  }\n\n  const gettime = () => {\n    return Date.now()\n  }\n\n  const test = async () => {\n    setResult(\"\")\n    const r = await client.soltest()\n    setResult(\"test done\")\n  }\n\n  const ssoLink = () => {\n    let sso = new SSOLoginHelper('https://matrix-client.matrix.org')\n    return sso.createSSORedirectURL('http://localhost:3000')\n  }\n\n  function CustomToggle(ob: any) {\n\n    const currentEventKey = useContext(AccordionContext);\n    const isCurrentEventKey = currentEventKey === ob.eventKey\n    const decoratedOnClick = useAccordionToggle(\n      ob.eventKey,\n      () => ob.callback && ob.callback(ob.eventKey),\n    );\n\n\n    return (\n      <>\n        <div onClick={decoratedOnClick} className='w-100 list-group-item p-0 pointer mb-1'>\n          <Accordion.Toggle eventKey={ob.eventKey}\n            as={Button}\n            variant=\"link\"\n            className='navbutton'\n          >\n\n            {ob.children}\n\n          </Accordion.Toggle>\n          {\n            isCurrentEventKey ? <FontAwesomeIcon className='ml-2 mr-2 mt-2 float-right' icon={faCaretUp}></FontAwesomeIcon> : <FontAwesomeIcon className='ml-2 mr-2 mt-2 float-right' icon={faCaretDown}></FontAwesomeIcon>\n          }\n        </div>\n      </>\n    );\n  }\n\n  return (\n    (isCallBack ? <>\n      <div className='container'>\n        <h6>Your Login token</h6>\n        <div>\n          Paste this into the Token field in the app in Remix or reload the plugin. You can close this window.\n        </div>\n        <input className='w-100 form-control' type='text' readOnly value={loginToken} />\n        <hr></hr>\n        <CopyToClipboard\n          text={loginToken}\n          onCopy={() => {\n            alert(\"Copied to clipboard.\");\n          }}\n        >\n          <button className=\"mt-2 btn btn-primary mb-2 btn-sm\">Copy token</button>\n        </CopyToClipboard>\n      </div>\n    </> :\n      <div className='container-fluid'>\n        {matrixMessage?.content ? <Alert variant={matrixMessage.type}>{matrixMessage.content}</Alert> : <></>}\n        {connected ? <><Button className='ml-0 btn btn-secondary w-100' onClick={async () => matrixClient.disconnect()}>Disconnect</Button>{matrixClient.username} </> : <>\n          <h6>Login with github etc.</h6>\n          <a className='btn btn-primary w-100 ml-0' href={ssoLink()} target='_blank'>Get a login token</a>\n          <input placeholder='paste token here' onChange={handleChangeToken} type='text' className=\"form-control w-100\" value={loginToken} />\n          <>\n            {connected ? <Button className='ml-0 btn btn-secondary w-100' onClick={async () => matrixClient.disconnect()}>Disconnect</Button> : <Button className='ml-0 btn btn-primary w-100' onClick={async () => await matrixClient.connectToken(username, loginToken)}>Connect with token</Button>}\n          </>\n          <hr></hr>\n\n          <h6>Login with password</h6>\n          <label>Matrix userId</label>\n          <input placeholder='userID eg. @mike:matrix:org' className=\"form-control w-100\" type='text' value={username} onChange={userChange} />\n          <label>Matrix password</label>\n          <input placeholder='password' className=\"form-control w-100\" type='password' value={password} onChange={passwordChange} />\n          <>\n            {connected ? <Button className='m-0 mt-1 btn btn-secondary w-100' onClick={async () => matrixClient.disconnect()}>Disconnect</Button> : <Button className='m-0 mt-1 btn btn-primary w-100' onClick={async () => connectMatrix()}>Connect with username/password</Button>}\n          </>\n\n        </>}\n\n        <hr></hr>\n        {!connected ? <></> : <>\n\n          <Accordion>\n            <CustomToggle eventKey=\"0\">Rooms</CustomToggle>\n            <Accordion.Collapse eventKey=\"0\">\n              <>\n                <RoomSelector rooms={[]}></RoomSelector>\n                <RoomSearch></RoomSearch>\n                <CreateRoom></CreateRoom>\n              </>\n            </Accordion.Collapse>\n            <CustomToggle eventKey=\"1\">Chat</CustomToggle>\n            <Accordion.Collapse eventKey=\"1\">\n              <>\n                <FileListViewer remove={removeFile} files={incomingFiles || []}></FileListViewer>\n                <label>Automatically send files</label><input name='autosend' className='ml-2' checked={autoSend} onChange={e => onAutoSendChange(e)} type=\"checkbox\" id=\"autosend\" />\n                <br></br><label>Automatically receive files</label><input name='autoreceive' className='ml-2' checked={autoReceive} onChange={e => onAutoReceiveChange(e)} type=\"checkbox\" id=\"autoreceive\" />\n\n                <Button className='m-0 mt-1 btn btn-primary w-100 mb-3' onClick={async () => client.createWorkSpace(\"\")}>Create empty workspace</Button>\n\n              </>\n            </Accordion.Collapse>\n          </Accordion>\n        </>}\n      </div>)\n\n  );\n}\n\n\n// Hook\nexport const useLocalStorage = (key: string, initialValue: any) => {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<any>(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      return initialValue;\n    }\n  });\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: any | ((val: any) => any)) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n    }\n  };\n  return [storedValue, setValue] as const;\n}\nexport default App;\n\n\nexport class SSOLoginHelper {\n  private _homeserver: string;\n  constructor(homeserver: string) {\n    this._homeserver = homeserver;\n  }\n\n  get homeserver() { return this._homeserver; }\n\n  createSSORedirectURL(returnURL: string) {\n    return `${this._homeserver}/_matrix/client/r0/login/sso/redirect?redirectUrl=${returnURL}`;\n  }\n}\n\n\n","/Volumes/butbut/code/remix-testreact/src/Client.ts",["101","102","103","104","105","106","107","108","109"],"import { PluginClient } from \"@remixproject/plugin\";\nimport { customAction } from '@remixproject/plugin-api/lib/file-system/file-panel'\nimport { createClient } from \"@remixproject/plugin-webview\";\nimport { BehaviorSubject } from \"rxjs\";\nimport axios from \"axios\";\nimport WalletConnectQRCodeModal from \"@walletconnect/qrcode-modal\";\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\n\nimport WalletConnect from \"@walletconnect/client\";\nimport QRCodeModal from \"@walletconnect/qrcode-modal\";\nimport CeramicClient from '@ceramicnetwork/http-client'\nimport { ThreeIdConnect, EthereumAuthProvider } from '@3id/connect'\nimport { matrixClient } from \"./App\";\nimport { type } from \"os\";\n\nconst simpleContract = `pragma solidity >=0.4.22 <0.7.0;\n/**\n* @title Storage\n* @dev Store & retreive value in a variable\n*/\ncontract StorageTestUpdateConfiguration {\n  uint256 number;\n  /**\n   * @dev Store value in variable\n   * @param num value to store\n   */\n  function store(uint256 num) public {\n      number = num;\n  }\n  /**\n   * @dev Return value \n   * @return value of 'number'\n   */\n  function retreive() public view returns (uint256){\n      return number;\n  }\n}\n          \n          `;\n\ntype File = {\n  name: string,\n  body: string\n}\n\nexport class WorkSpacePlugin extends PluginClient {\n  callBackEnabled: boolean = true;\n  feedback = new BehaviorSubject<string>(\"\");\n  autoSend: boolean = false\n  autoReceive: boolean = false\n  files: File[] = []\n\n  constructor() {\n    super();\n    console.log(\"CONSTRUCTOR\");\n    createClient(this);\n\n\n\n    this.methods = [\"qr\", \"dismiss\", \"sendfiletomatrix\",\"senddirtomatrix\"];\n    this.onload()\n      .then(async (x) => {\n        //console.log(\"client loaded\", JSON.stringify(this));\n        await this.setCallBacks()\n\n\n\n      })\n      .catch(async (e) => {\n        console.log(\"ERROR CONNECTING\", e);\n      });\n  }\n\n  async sendFile(path: string) {\n    //console.log(\"file send\", path);\n    try {\n      let body = await this.call(\"fileManager\", \"getFile\", path)\n      let found = false\n      for (let file of this.files) {\n        if (file.name === path) {\n          found = true\n          if (file.body !== body) {\n            console.log('sending & changing file')\n            file.body = body\n            matrixClient.sendFile(path, body)\n          }\n        }\n      }\n      if (!found) {\n        console.log('sending & storing file')\n        this.files.push({ name: path, body: body })\n        matrixClient.sendFile(path, body)\n      }\n    } catch (e) {\n\n    }\n    //console.log(file)\n\n  }\n\n\n\n  async setCallBacks() {\n\n\n    let cmd: customAction = {\n      id: this.name,\n      name: \"sendfiletomatrix\",\n      type: [\"file\"],\n      extension: [],\n      label: \"Send file to Matrix\",\n      path: [],\n      pattern: [],\n      //sticky: true\n    }\n\n    try {\n      /* this.call('filePanel', 'registerContextMenuItem', {\n        id: 'dgit',\n        name: 'track',\n        label: 'Track in dGit',\n        type: ['file', 'folder'],\n        extension: [],\n        path: [],\n        pattern: [],\n        sticky: true\n      }) */\n    } catch (e) {\n\n    }\n\n    let cmd2: customAction = {\n      id: this.name,\n      name: \"senddirtomatrix\",\n      label: \"Send directory to Matrix\",\n      type: [\"folder\"],\n      extension: [],\n      path: [],\n      pattern: []\n    }\n    try {\n      await this.call(\"filePanel\", \"registerContextMenuItem\", cmd)\n      await this.call(\"filePanel\", \"registerContextMenuItem\", cmd2)\n    }catch(e){\n\n    }\n\n    console.log(\"set listeners\");\n    let me = this;\n    this.on(\"fileManager\", \"currentFileChanged\", async function (x) {\n      if (me.autoSend) await me.sendFile(x)\n    });\n\n    this.on(\"fileManager\", \"fileSaved\", async function (x: any) {\n      if (me.autoSend) await me.sendFile(x)\n    })\n\n    this.on(\"fileManager\", \"fileAdded\", async function (x) {\n      //if (me.autoSync) await me.sendFile(x)\n    });\n\n    this.on(\"fileManager\", \"fileRemoved\", function (x) {\n      console.log(\"REMOVE\", x);\n      me.log(x);\n    });\n\n    this.on(\"fileManager\", \"fileRemoved\", function (x) {\n      console.log(\"REMOVE\", x);\n      me.log(x);\n    });\n\n    this.on(\n      \"solidity\",\n      \"compilationFinished\",\n      function (target, source, version, data) {\n        console.log(\"compile finished\", target, source, version, data);\n      }\n    );\n\n\n\n    this.on(\"walletconnect\" as any, \"displayUri\", async function (x: string) {\n      await me.qr(x);\n    })\n\n    this.on(\"walletconnect\" as any, \"accountsChanged\", async function (x: string) {\n      await me.dismiss()\n    })\n    this.on(\"filePanel\", \"setWorkspace\", function (x) {\n      me.files = []\n    });\n\n\n    /*     this.on(\"fileExplorers\", \"createWorkspace\", function (x) {\n      console.log(\"ws create\", x);\n      me.log(x);\n    });\n\n    this.on(\"fileExplorers\", \"setWorkspace\", function (x) {\n      console.log(\"ws set\", x);\n      me.log(x);\n    });\n\n    this.on(\"fileExplorers\", \"deleteWorkspace\", function (x) {\n      console.log(\"wS DELETE\", x);\n      me.log(x);\n    });\n\n    this.on(\"fileExplorers\", \"renameWorkspace\", function (x) {\n      console.log(\"wS rn\", x);\n      me.log(x);\n    }); */\n  }\n\n  async customAction(o: customAction) {\n    console.log(\"custom action called\", o)\n  }\n\n  async sendfiletomatrix(o: customAction) {\n    await this.sendFile(o.path[0])\n  }\n\n  async senddirtomatrix(o: customAction) {\n    //await this.sendFile(o.path[0])\n  }\n\n  async qr(uri: string) {\n    console.log(\"QR \", uri);\n    WalletConnectQRCodeModal.open(uri, function () {\n      console.log(\"qr modal done\");\n    });\n  }\n\n  async dismiss() {\n    WalletConnectQRCodeModal.close();\n  }\n\n  async dapp(uri: string) {\n    console.log(\"DAPP \", uri)\n    await this.call(\"walletconnect\" as any, \"connect\")\n\n\n  }\n\n  async connect() {\n    // Create a connector\n    const connector = new WalletConnect({\n      bridge: \"https://static.225.91.181.135.clients.your-server.de/\", // Required\n      qrcodeModal: QRCodeModal,\n    });\n\n    // Check if connection is already established\n    if (!connector.connected) {\n      // create new session\n      connector.createSession().then(() => {\n        console.log(connector);\n      });\n    }\n\n    // Subscribe to connection events\n    connector.on(\"connect\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"CONNECT\", payload);\n      // Get provided accounts and chainId\n      const { accounts, chainId } = payload.params[0];\n    });\n\n    connector.on(\"session_update\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"SESSUPDATE\", payload);\n      // Get updated accounts and chainId\n      const { accounts, chainId } = payload.params[0];\n    });\n\n    connector.on(\"disconnect\", (error, payload) => {\n      if (error) {\n        throw error;\n      }\n      console.log(\"DISCONNEDT\", payload);\n      // Delete connector\n    });\n  }\n\n  async wallet() {\n    console.log(\"connect\");\n    const provider = new WalletConnectProvider({\n      infuraId: \"83d4d660ce3546299cbe048ed95b6fad\",\n      bridge: \"https://static.225.91.181.135.clients.your-server.de/\",\n      qrcode: false,\n    });\n\n    provider.connector.on(\"display_uri\", (err, payload) => {\n      const uri = payload.params[0];\n      console.log(uri);\n      this.call(\"walletconnect\" as any, \"qr\", uri);\n    });\n\n    // Subscribe to accounts change\n    provider.on(\"accountsChanged\", (accounts: string[]) => {\n      console.log(accounts);\n      this.call(\"walletconnect\" as any, \"dismiss\");\n      provider.disconnect();\n    });\n\n    // Subscribe to chainId change\n    provider.on(\"chainChanged\", (chainId: number) => {\n      console.log(chainId);\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code: number, reason: string) => {\n      console.log(code, reason);\n    });\n\n    await provider.enable();\n  }\n\n  async log(message: string) {\n    //console.log(message)\n    this.call('terminal' as any, 'log', { type: 'info', value: 'Name\\r\\nAniket' })\n    this.call('terminal' as any, 'log', { type: 'html', value: '<div>test</div><ul><li>test</li></ul>' })\n  }\n\n  async changetoinjected() {\n    this.call('udapp', 'setEnvironmentMode', 'injected')\n  }\n\n  async test(p: string) { }\n\n  async activate() {\n    this.call(\"manager\", \"activatePlugin\", \"remixd\");\n  }\n\n  async writetoCeramic() {\n    const API_URL = \"http://135.181.91.225:7007/\"\n    const ceramic = new CeramicClient(API_URL)\n    const eth = window as any\n    const addresses = await eth.ethereum.enable()\n    const threeIdConnect = new ThreeIdConnect()\n    const authProvider = new EthereumAuthProvider(eth.ethereum, addresses[0])\n    await threeIdConnect.connect(authProvider)\n    const provider = await threeIdConnect.getDidProvider()\n    await ceramic.setDIDProvider(provider)\n    console.log(provider)\n\n  }\n\n  async deactivate() {\n    this.call(\"manager\", \"deactivatePlugin\", \"111\");\n  }\n\n  async getresult() {\n    let r = await this.call(\"solidity\", \"getCompilationResult\");\n    console.log(\"RESULT\", r);\n  }\n\n  async gitbranches() {\n    //let r = await this.call(\"dGitProvider\",\"branches\")\n    //console.log(\"branches\", r)\n  }\n  async gitbranch(dir: string) {\n    //let r = await this.call(\"dGitProvider\",\"branch\",dir)\n  }\n\n  async gitcurrentbranch() {\n    //let r = await this.call(\"dGitProvider\",\"currentbranch\")\n    // console.log(r)\n  }\n\n  async gitcheckout(dir: string) {\n    //let r = await this.call(\"dGitProvider\",\"checkout\",dir)\n  }\n\n  async gitinit(dir: string) {\n    // let s = await this.call(\"fileExplorers\",\"getCurrentWorkspace\")\n    // let r = await this.call(\"dGitProvider\",\"init\")\n  }\n\n  async gitstatus(dir: string) {\n    //  let r = await this.call(\"dGitProvider\",\"status\",'HEAD')\n    // console.log(\"git status \", r)\n  }\n\n  async gitadd(dir: string) {\n    // let r = await this.call(\"dGitProvider\",\"add\",dir)\n    // console.log(\"git add \", r)\n  }\n\n  async gitremove(dir: string) {\n    //  let r = await this.call(\"dGitProvider\",\"rm\",dir)\n    //  console.log(\"git rm \", r)\n  }\n\n  async gitlog() {\n    //  let r = await this.call(\"dGitProvider\",\"log\",'HEAD')\n    // console.log(\"git log \", r)\n  }\n\n  async gitcommit() {\n    //  let r = await this.call(\"dGitProvider\",\"commit\",{})\n    //  console.log(\"git log \", r)\n  }\n\n  async gitlsfiles() {\n    //  let r = await this.call(\"dGitProvider\",\"lsfiles\",'HEAD')\n    // console.log(\"git log \", r)\n  }\n\n  async gitresolveref() {\n    //  let r = await this.call(\"dGitProvider\",\"resolveref\",'HEAD')\n    //  console.log(\"git resolve \", r)\n  }\n\n  async gitreadblob(file: string) {\n    //  let c = await this.call(\"dGitProvider\",\"log\",'HEAD')\n    //  console.log(c[c.length-1].oid)\n    //  let r = await this.call(\"dGitProvider\",\"readblob\",{oid:c[c.length-1].oid, filepath:\"README.txt\"})\n    //  console.log(\"git blob \", r)\n  }\n\n  async ipfspush() {\n    console.log(await this.call(\"dGitProvider\", \"push\"));\n  }\n\n  async pinatapush() {\n    try {\n      let r = await this.call(\"dGitProvider\" as any, \"pin\", '124def6d9115e0c2c521', '130c1a8b18fd0c77f9ee8c1614146d277c3def661506dbf1c78618325cc53c8b');\n      console.log(r)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  async pinlist() {\n    try {\n      let r = await this.call(\"dGitProvider\" as any, \"pinList\", '124def6d9115e0c2c521', '130c1a8b18fd0c77f9ee8c1614146d277c3def661506dbf1c78618325cc53c8b');\n      console.log(r)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n  async ipfspull(cid: string) {\n    try {\n      await this.call(\"dGitProvider\", \"pull\", cid);\n    } catch (e) { }\n  }\n\n  async ipfsConfig() {\n    /* try{\n      let r = await this.call(\"dGitProvider\", \"setIpfsConfig\", {\n        host: 'localhost',\n        port: 5002,\n        protocol: 'http',\n        ipfsurl: 'https://ipfsgw.komputing.org/ipfs/'\n      });\n      console.log(r)\n      }catch(e){\n        console.log(e)\n      }  */\n  }\n\n  async read(dir: string) {\n    let files = await this.call(\"fileManager\", \"readdir\", dir);\n    console.log(files.toString());\n    console.log(files);\n  }\n  async write(path: string, content: string) {\n    await this.call(\"fileManager\", \"setFile\", path, content);\n    await this.call(\"fileManager\",\"open\", path)\n  }\n\n  async getcurrentfile() {\n    var files = await this.call(\"fileManager\", \"getCurrentFile\");\n    console.log(files);\n  }\n\n  async switchfile(dir: string) {\n    var files = await this.call(\"fileManager\", \"switchFile\", dir);\n  }\n\n  async zip() {\n    // let r = await this.call(\"dGitProvider\",\"zip\")\n  }\n\n  async fetch(dir: string) {\n    try {\n      var files = await fetch(dir);\n      console.log(files);\n      console.log(files.toString());\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async axios(dir: string) {\n    try {\n      var files = await axios.get(dir);\n      console.log(files);\n      console.log(files.toString());\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  async getcompilerconfig() {\n    //let config = await this.call(\"solidity\",\"getCompilerConfig\")\n    //console.log(config)\n  }\n\n  async getWorkSpace() {\n    //  let s = await this.call(\"fileExplorers\",\"getCurrentWorkspace\")\n    //  console.log(s)\n  }\n\n  async getWorkSpaces() {\n    //  let s = await this.call(\"fileExplorers\",\"getWorkspaces\")\n    //  console.log(s)\n  }\n\n  async createWorkSpace(name: string) {\n    await this.call('filePanel' as any, 'createWorkspace', `workspace_${Date.now()}`, false)\n    //await this.call(\"filePanel\",\"setWorkspace\", name)\n  }\n\n  async importcontent(dir: string) {\n    console.log(\"import content\");\n    var content = await this.call(\n      \"contentImport\",\n      \"resolve\",\n      \"ipfs://Qmd1gr9VeQaYNA8wVDq86RwdeMZkfF93JZhhWgfCVewYtc\"\n    );\n    console.log(\"content\", content);\n  }\n  async open(dir: string) {\n    await this.call(\"fileManager\", \"open\", dir);\n  }\n\n  async highlight(f: string) {\n    this.call(\n      \"editor\",\n      \"highlight\",\n      {\n        start: {\n          line: 0,\n          column: 1,\n        },\n        end: {\n          line: 1,\n          column: 10,\n        },\n      },\n      f,\n      \"#ffffff\"\n    );\n  }\n\n  async addAnnotation(f: string) {\n    this.call(\"editor\", \"addAnnotation\", {\n      row: 1,\n      column: 1,\n      text: \"annotation\",\n      type: \"error\",\n    });\n    this.call(\"editor\", \"addAnnotation\", {\n      row: 10,\n      column: 2,\n      text: \"annotation\",\n      type: \"info\",\n    });\n    this.call(\"editor\", \"addAnnotation\", {\n      row: 12,\n      column: 1,\n      text: \"annotation\",\n      type: \"warning\",\n    });\n  }\n\n  async clearAnnotations(f: string) {\n    this.call(\"editor\", \"clearAnnotations\");\n  }\n\n  async activatePlugin(f: string) {\n    await this.call('manager', 'activatePlugin', f)\n    console.log(await this.call('manager', 'isActive', f))\n  }\n\n  async deActivatePlugin(f: string) {\n    await this.call('manager', 'deactivatePlugin', f)\n    console.log(await this.call('manager', 'isActive', f))\n  }\n\n  async getSettings() {\n    let settings = await this.call(\"udapp\", \"getSettings\");\n    console.log(settings);\n  }\n\n  async setSettings() {\n    let settings = await this.call(\"udapp\", \"setEnvironmentMode\", \"injected\");\n    await this.getSettings();\n  }\n\n  async debug(hash: string) {\n    let settings = await this.call(\"remixdprovider\" as any, \"debug\", hash);\n  }\n\n  async getAccounts() {\n    let settings = await this.call(\"udapp\", \"getAccounts\");\n    console.log(settings);\n    return settings;\n  }\n\n  async soltest() {\n    const f = `pragma solidity >=0.4.0 <0.7.0;\n\n    contract SimpleStorage {\n        uint storedData;\n        \n        // a public function named set that returns a uint goes here\n        function set(uint _p1) public returns (uint) {\n            storedData = _p1;\n        }\n        \n       function get() public view returns (uint) {\n            return storedData;\n        }\n    }\n    `;\n\n    const t = `pragma solidity >=0.4.0 <0.7.0;\n    import \"remix_tests.sol\"; // this import is automatically injected by Remix.\n    import \"./modifyVariable.sol\";\n    \n    contract test3 {\n    \n        SimpleStorage storageToTest;\n        function beforeAll () public {\n           storageToTest = new SimpleStorage();\n        }\n    \n        function checkSetFunction () public {\n            storageToTest.set(12345);\n            Assert.equal(storageToTest.get(), uint(12345), \"the contract should contain the function set\");\n        }\n    }\n    `;\n\n    console.log(f);\n    console.log(t);\n\n    await this.call(\"fileManager\", \"setFile\", \"/modifyVariable.sol\", f);\n    await this.call(\"fileManager\", \"switchFile\", \"/modifyVariable.sol\");\n    await this.call(\"fileManager\", \"setFile\", \"/modifyVariable_test.sol\", t);\n    const result = await this.call(\n      \"solidityUnitTesting\",\n      \"testFromPath\",\n      \"modifyVariable_test.sol\"\n    );\n    return result.errors;\n  }\n\n  async disableCallBacks() {\n    this.callBackEnabled = false;\n  }\n  async enableCallBacks() {\n    this.callBackEnabled = true;\n  }\n}\n","/Volumes/butbut/code/remix-testreact/src/Matrix.ts",["110","111","112"],"/Volumes/butbut/code/remix-testreact/src/use-observable.ts",[],"/Volumes/butbut/code/remix-testreact/src/components/FileList.tsx",["113","114","115","116"],"import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { client, matrixClient } from \"../App\";\nimport { IncomingFile, FileListProps } from \"../types/types\";\nimport { faTrash, faExclamationTriangle, faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { default as dateFormat } from 'dateformat'\n\n\n\nexport const FileListViewer: React.FC<FileListProps> = (fileList) => {\n  const [message, setMsg] = useState<string>()\n  const fieldRef = React.useRef<HTMLInputElement>(null);\n\n  const importFile = async (file: IncomingFile) => {\n    if (file.fileName) {\n      await client.write(file.fileName, file.body || \"\")\n      //fileList.remove(file)\n    }\n  }\n  function sendmsg(event: any) {\n    if (message) {\n      matrixClient.sendmessage(message).then(() => {\n        setMsg('')\n        if (fieldRef && fieldRef.current)\n          fieldRef.current.scrollIntoView();\n      }\n      )\n    }\n    event.preventDefault();\n\n  }\n\n  useEffect(() => {\n    if (fieldRef.current) {\n      fieldRef.current.scrollIntoView();\n    }\n  }, []);\n\n  const handleChange = ({ target }: any) => {\n    setMsg(target.value);\n  };\n\n  return (<>\n    <div className=' chatwindow'>\n      <ul className=\"list-group\">\n        {fileList.files.filter((f) => f && f.timestamp).sort((f1, f2) => f1.timestamp! - f2.timestamp!).filter((f) => (f.message || f.url) && f.roomId === matrixClient.roomId).map((file, index) => {\n          return (<>\n\n            <li className=\"list-group-item ml-0 pl-1\">\n              <div className='small text-muted'>{file.userId}<br></br>{dateFormat(file.timestamp, \"dd, mmmm h:MM:ss TT\")}</div>\n              <Button className='badge badge-pill badge-primary mb-0' onClick={async () => importFile(file)}>{file.fileName}</Button>\n              {file.message ?\n                <div className='small'>{file.message}</div> : <></>}\n            </li>\n\n          </>)\n        })}\n\n      </ul>\n      <span className=\"m-0 p-0\" ref={fieldRef}></span>\n    </div>\n    <form onSubmit={sendmsg}>\n      <input placeholder='Enter to send' className='form-control w-100' type=\"text\" value={message} onChange={handleChange} />\n      <input className='btn btn-primary ml-0 w-100' type=\"submit\" value=\"send\" />\n    </form>\n\n\n  </>)\n}","/Volumes/butbut/code/remix-testreact/src/themes/theme.tsx",[],"/Volumes/butbut/code/remix-testreact/src/components/Rooms.tsx",["117","118","119","120","121","122","123","124","125","126"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { client, matrixClient } from \"../App\";\nimport { faTrash, faExclamationTriangle, faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Room } from \"matrix-js-sdk\";\nimport SelectSearch, { SelectSearchOption } from 'react-select-search';\nimport { useBehaviorSubject } from \"../use-observable\";\n\ninterface RoomProps {\n    rooms: Room[]\n}\n\nexport const RoomSelector: React.FC<RoomProps> = (rooms) => {\n    let myRooms = useBehaviorSubject(matrixClient.myRooms)\n\n    const selectRoom = (event:any) => {\n        console.log(event.target.value)\n        matrixClient.setRoomId(event.target.value)\n    }\n\n    return(<>\n        <Form>\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\n            <Form.Label>Select Room</Form.Label>\n            <Form.Control onChange={selectRoom} as=\"select\" custom>\n            {myRooms?.map((r:Room)=>{\n                return (\n                    <option value={r.roomId}>{r.name}</option>\n                )\n            })}\n            </Form.Control>\n            <div onClick={async()=> await matrixClient.leaveroom() } className='badge bagde-secondary'>leave room</div>\n        </Form.Group>\n        </Form>\n        \n    </>)\n}","/Volumes/butbut/code/remix-testreact/src/components/RoomSearch.tsx",["127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Dropdown, Form } from \"react-bootstrap\";\nimport { client, matrixClient } from \"../App\";\nimport { faTrash, faExclamationTriangle, faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IPublicRoomsChunkRoom, Room } from \"matrix-js-sdk\";\nimport SelectSearch, { SelectSearchOption } from 'react-select-search';\nimport { useBehaviorSubject } from \"../use-observable\";\n\nimport './RoomSearch.css'\nimport { async } from \"rxjs\";\n\nexport const RoomSearch: React.FC<any> = (props) => {\n    const [rooms, setRooms] = useState<IPublicRoomsChunkRoom[]>([])\n    const [query, setQuery] = useState<string>(\"\")\n    const selectRoom = (event: any) => {\n        console.log(event.target.value)\n        matrixClient.setRoomId(event.target.value)\n    }\n    \n    const handleChange = ({ target }: any) => {\n        setQuery(target.value);\n      };\n\n    const searchroom = async (event:any) => {\n        event.preventDefault();   \n        let result = await matrixClient.searchRooms(query)\n        console.log(result.chunk)\n        setRooms(result.chunk)     \n    }\n\n    const joinroom = async(room_id: string) => {\n        setRooms([])\n        await matrixClient.joinroom(room_id)\n    }\n\n    return (<>\n        <form onSubmit={searchroom}>\n            <input placeholder='Enter to search a room' className='form-control w-100' type=\"text\" onChange={handleChange} />\n            <div onClick={async()=> { setRooms([]); }} className='badge bagde-secondary'>clear search</div>\n        </form>\n        <ul className='pl-0'>\n            {rooms.map((room)=>{\n                return(<li className='pl-0'><div onClick={async() => joinroom(room.room_id)} className='badge badge-primary mr-2'>Join room</div>{room.name}</li>)\n            })}\n            \n        </ul>\n    </>)\n}","/Volumes/butbut/code/remix-testreact/src/components/CreateRoom.tsx",["142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Dropdown, Form } from \"react-bootstrap\";\nimport { client, matrixClient } from \"../App\";\nimport { faTrash, faExclamationTriangle, faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IPublicRoomsChunkRoom, Room } from \"matrix-js-sdk\";\nimport SelectSearch, { SelectSearchOption } from 'react-select-search';\nimport { useBehaviorSubject } from \"../use-observable\";\n\nimport './RoomSearch.css'\nimport { async } from \"rxjs\";\nimport { Visibility } from \"matrix-js-sdk/lib/@types/partials\";\n\nexport const CreateRoom: React.FC<any> = (props) => {\n\n    const [name, setName] = useState<string>(\"\")\n    const [alias, setAlias] = useState<string>(\"\")\n    const [visibility, setVisibility] = useState<Visibility>(Visibility.Public)\n    \n    const handleChange = ({ target }: any) => {\n        setName(target.value);\n    };\n\n    const handleChangeAlias = ({ target }: any) => {\n        setAlias(target.value);\n    };\n\n    const visChange = (vis: Visibility) => {\n        setVisibility(vis);\n    };\n\n    const createRoom = async () => {\n        await matrixClient.createroom(name, alias, \"\", visibility)\n\n    }\n\n    return (<>\n        <Form>\n            <Form.Label>Create Room</Form.Label>\n            <input placeholder='name eg. myroom' className='form-control w-100' type=\"text\" onChange={handleChange} />\n            <input placeholder='alias eg myroom' className='form-control w-100' type=\"text\" onChange={handleChangeAlias} />\n            <Form.Label>visibility</Form.Label>\n            <input checked={visibility===Visibility.Public} onChange={async () => visChange(Visibility.Public)} type=\"radio\" className='mr-2 ml-2' value='public' name=\"vis\" />public\n            <input checked={visibility===Visibility.Private} onChange={async () => visChange(Visibility.Private)} type=\"radio\" className='mr-2 ml-2' value='public' name=\"vis\" />private\n            <br></br>\n            <div onClick={async()=> await createRoom() } className='btn btn-sm btn-secondary'>create room</div>\n        </Form><hr></hr>\n    </>)\n}",{"ruleId":"156","severity":1,"message":"157","line":226,"column":15,"nodeType":"158","messageId":"159","endLine":226,"endColumn":23},{"ruleId":"156","severity":1,"message":"160","line":226,"column":25,"nodeType":"158","messageId":"159","endLine":226,"endColumn":32},{"ruleId":"156","severity":1,"message":"157","line":235,"column":15,"nodeType":"158","messageId":"159","endLine":235,"endColumn":23},{"ruleId":"156","severity":1,"message":"160","line":235,"column":25,"nodeType":"158","messageId":"159","endLine":235,"endColumn":32},{"ruleId":"156","severity":1,"message":"161","line":440,"column":9,"nodeType":"158","messageId":"159","endLine":440,"endColumn":14},{"ruleId":"156","severity":1,"message":"162","line":560,"column":9,"nodeType":"158","messageId":"159","endLine":560,"endColumn":17},{"ruleId":"156","severity":1,"message":"162","line":565,"column":9,"nodeType":"158","messageId":"159","endLine":565,"endColumn":17},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"156","severity":1,"message":"167","line":1,"column":10,"nodeType":"158","messageId":"159","endLine":1,"endColumn":14},{"ruleId":"156","severity":1,"message":"168","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":26},{"ruleId":"156","severity":1,"message":"169","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":16},{"ruleId":"156","severity":1,"message":"170","line":23,"column":9,"nodeType":"158","messageId":"159","endLine":23,"endColumn":16},{"ruleId":"156","severity":1,"message":"171","line":29,"column":11,"nodeType":"158","messageId":"159","endLine":29,"endColumn":12},{"ruleId":"172","severity":1,"message":"173","line":37,"column":7,"nodeType":"174","messageId":"175","endLine":37,"endColumn":46,"fix":"176"},{"ruleId":"163","replacedBy":"177"},{"ruleId":"165","replacedBy":"178"},{"ruleId":"156","severity":1,"message":"169","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":16},{"ruleId":"156","severity":1,"message":"179","line":7,"column":54,"nodeType":"158","messageId":"159","endLine":7,"endColumn":59},{"ruleId":"156","severity":1,"message":"180","line":10,"column":10,"nodeType":"158","messageId":"159","endLine":10,"endColumn":15},{"ruleId":"156","severity":1,"message":"181","line":35,"column":10,"nodeType":"158","messageId":"159","endLine":35,"endColumn":14},{"ruleId":"156","severity":1,"message":"182","line":36,"column":10,"nodeType":"158","messageId":"159","endLine":36,"endColumn":16},{"ruleId":"183","severity":1,"message":"184","line":65,"column":6,"nodeType":"185","endLine":65,"endColumn":8,"suggestions":"186"},{"ruleId":"156","severity":1,"message":"187","line":91,"column":9,"nodeType":"158","messageId":"159","endLine":91,"endColumn":21},{"ruleId":"183","severity":1,"message":"188","line":101,"column":6,"nodeType":"185","endLine":101,"endColumn":20,"suggestions":"189"},{"ruleId":"156","severity":1,"message":"170","line":138,"column":9,"nodeType":"158","messageId":"159","endLine":138,"endColumn":16},{"ruleId":"156","severity":1,"message":"190","line":142,"column":9,"nodeType":"158","messageId":"159","endLine":142,"endColumn":13},{"ruleId":"156","severity":1,"message":"171","line":144,"column":11,"nodeType":"158","messageId":"159","endLine":144,"endColumn":12},{"ruleId":"172","severity":1,"message":"173","line":206,"column":11,"nodeType":"174","messageId":"175","endLine":206,"endColumn":86,"fix":"191"},{"ruleId":"156","severity":1,"message":"192","line":14,"column":10,"nodeType":"158","messageId":"159","endLine":14,"endColumn":14},{"ruleId":"156","severity":1,"message":"193","line":16,"column":7,"nodeType":"158","messageId":"159","endLine":16,"endColumn":21},{"ruleId":"156","severity":1,"message":"157","line":267,"column":15,"nodeType":"158","messageId":"159","endLine":267,"endColumn":23},{"ruleId":"156","severity":1,"message":"160","line":267,"column":25,"nodeType":"158","messageId":"159","endLine":267,"endColumn":32},{"ruleId":"156","severity":1,"message":"157","line":276,"column":15,"nodeType":"158","messageId":"159","endLine":276,"endColumn":23},{"ruleId":"156","severity":1,"message":"160","line":276,"column":25,"nodeType":"158","messageId":"159","endLine":276,"endColumn":32},{"ruleId":"156","severity":1,"message":"161","line":482,"column":9,"nodeType":"158","messageId":"159","endLine":482,"endColumn":14},{"ruleId":"156","severity":1,"message":"162","line":602,"column":9,"nodeType":"158","messageId":"159","endLine":602,"endColumn":17},{"ruleId":"156","severity":1,"message":"162","line":607,"column":9,"nodeType":"158","messageId":"159","endLine":607,"endColumn":17},{"ruleId":"156","severity":1,"message":"194","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":15},{"ruleId":"156","severity":1,"message":"195","line":5,"column":17,"nodeType":"158","messageId":"159","endLine":5,"endColumn":27},{"ruleId":"156","severity":1,"message":"196","line":47,"column":17,"nodeType":"158","messageId":"159","endLine":47,"endColumn":24},{"ruleId":"156","severity":1,"message":"197","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":17},{"ruleId":"156","severity":1,"message":"198","line":5,"column":19,"nodeType":"158","messageId":"159","endLine":5,"endColumn":40},{"ruleId":"156","severity":1,"message":"199","line":5,"column":42,"nodeType":"158","messageId":"159","endLine":5,"endColumn":51},{"ruleId":"156","severity":1,"message":"200","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":25},{"ruleId":"156","severity":1,"message":"201","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"202","line":1,"column":28,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"203","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":16},{"ruleId":"156","severity":1,"message":"204","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":16},{"ruleId":"156","severity":1,"message":"197","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":17},{"ruleId":"156","severity":1,"message":"198","line":4,"column":19,"nodeType":"158","messageId":"159","endLine":4,"endColumn":40},{"ruleId":"156","severity":1,"message":"199","line":4,"column":42,"nodeType":"158","messageId":"159","endLine":4,"endColumn":51},{"ruleId":"156","severity":1,"message":"200","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":25},{"ruleId":"156","severity":1,"message":"205","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":20},{"ruleId":"156","severity":1,"message":"206","line":7,"column":24,"nodeType":"158","messageId":"159","endLine":7,"endColumn":42},{"ruleId":"156","severity":1,"message":"201","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"203","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":16},{"ruleId":"156","severity":1,"message":"207","line":2,"column":18,"nodeType":"158","messageId":"159","endLine":2,"endColumn":26},{"ruleId":"156","severity":1,"message":"208","line":2,"column":28,"nodeType":"158","messageId":"159","endLine":2,"endColumn":32},{"ruleId":"156","severity":1,"message":"204","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":16},{"ruleId":"156","severity":1,"message":"197","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":17},{"ruleId":"156","severity":1,"message":"198","line":4,"column":19,"nodeType":"158","messageId":"159","endLine":4,"endColumn":40},{"ruleId":"156","severity":1,"message":"199","line":4,"column":42,"nodeType":"158","messageId":"159","endLine":4,"endColumn":51},{"ruleId":"156","severity":1,"message":"200","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":25},{"ruleId":"156","severity":1,"message":"209","line":6,"column":33,"nodeType":"158","messageId":"159","endLine":6,"endColumn":37},{"ruleId":"156","severity":1,"message":"205","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":20},{"ruleId":"156","severity":1,"message":"206","line":7,"column":24,"nodeType":"158","messageId":"159","endLine":7,"endColumn":42},{"ruleId":"156","severity":1,"message":"168","line":8,"column":10,"nodeType":"158","messageId":"159","endLine":8,"endColumn":28},{"ruleId":"156","severity":1,"message":"180","line":11,"column":10,"nodeType":"158","messageId":"159","endLine":11,"endColumn":15},{"ruleId":"156","severity":1,"message":"210","line":16,"column":11,"nodeType":"158","messageId":"159","endLine":16,"endColumn":21},{"ruleId":"156","severity":1,"message":"201","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"203","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":16},{"ruleId":"156","severity":1,"message":"207","line":2,"column":18,"nodeType":"158","messageId":"159","endLine":2,"endColumn":26},{"ruleId":"156","severity":1,"message":"204","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":16},{"ruleId":"156","severity":1,"message":"197","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":17},{"ruleId":"156","severity":1,"message":"198","line":4,"column":19,"nodeType":"158","messageId":"159","endLine":4,"endColumn":40},{"ruleId":"156","severity":1,"message":"199","line":4,"column":42,"nodeType":"158","messageId":"159","endLine":4,"endColumn":51},{"ruleId":"156","severity":1,"message":"200","line":5,"column":10,"nodeType":"158","messageId":"159","endLine":5,"endColumn":25},{"ruleId":"156","severity":1,"message":"211","line":6,"column":10,"nodeType":"158","messageId":"159","endLine":6,"endColumn":31},{"ruleId":"156","severity":1,"message":"209","line":6,"column":33,"nodeType":"158","messageId":"159","endLine":6,"endColumn":37},{"ruleId":"156","severity":1,"message":"205","line":7,"column":8,"nodeType":"158","messageId":"159","endLine":7,"endColumn":20},{"ruleId":"156","severity":1,"message":"206","line":7,"column":24,"nodeType":"158","messageId":"159","endLine":7,"endColumn":42},{"ruleId":"156","severity":1,"message":"168","line":8,"column":10,"nodeType":"158","messageId":"159","endLine":8,"endColumn":28},{"ruleId":"156","severity":1,"message":"180","line":11,"column":10,"nodeType":"158","messageId":"159","endLine":11,"endColumn":15},"@typescript-eslint/no-unused-vars","'accounts' is assigned a value but never used.","Identifier","unusedVar","'chainId' is assigned a value but never used.","'files' is assigned a value but never used.","'settings' is assigned a value but never used.","no-native-reassign",["212"],"no-negated-in-lhs",["213"],"'time' is defined but never used.","'useBehaviorSubject' is defined but never used.","'Logger' is defined but never used.","'gettime' is assigned a value but never used.","'r' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"214","text":"215"},["212"],["213"],"'Modal' is defined but never used.","'async' is defined but never used.","'room' is assigned a value but never used.","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoginToken'. Either include it or remove the dependency array.","ArrayExpression",["216"],"'handleChange' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addNewContract'. Either include it or remove the dependency array.",["217"],"'test' is assigned a value but never used.",{"range":"218","text":"215"},"'type' is defined but never used.","'simpleContract' is assigned a value but never used.","'Alert' is defined but never used.","'AlertProps' is defined but never used.","'room_id' is assigned a value but never used.","'faTrash' is defined but never used.","'faExclamationTriangle' is defined but never used.","'faDiceD20' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'client' is defined but never used.","'SelectSearch' is defined but never used.","'SelectSearchOption' is defined but never used.","'Dropdown' is defined but never used.","'Form' is defined but never used.","'Room' is defined but never used.","'selectRoom' is assigned a value but never used.","'IPublicRoomsChunkRoom' is defined but never used.","no-global-assign","no-unsafe-negation",[765,765]," rel=\"noreferrer\"",{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},[6363,6363],"Update the dependencies array to be: [setLoginToken]",{"range":"223","text":"224"},"Update the dependencies array to be: [addNewContract, incomingFile]",{"range":"225","text":"226"},[2412,2414],"[setLoginToken]",[3286,3300],"[addNewContract, incomingFile]"]