[{"/Volumes/butbut/code/testapi/plugintester/src/Client.ts":"1","/Volumes/butbut/code/testapi/plugintester/src/index.tsx":"2","/Volumes/butbut/code/testapi/plugintester/src/App.tsx":"3","/Volumes/butbut/code/testapi/plugintester/src/reportWebVitals.ts":"4"},{"size":16107,"mtime":1624531084000,"results":"5","hashOfConfig":"6"},{"size":520,"mtime":1617198243000,"results":"7","hashOfConfig":"6"},{"size":7249,"mtime":1622796021000,"results":"8","hashOfConfig":"6"},{"size":425,"mtime":1609233049000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bh2wdb",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Volumes/butbut/code/testapi/plugintester/src/Client.ts",["20","21","22","23","24","25","26"],"/Volumes/butbut/code/testapi/plugintester/src/index.tsx",[],["27","28"],"/Volumes/butbut/code/testapi/plugintester/src/App.tsx",["29","30","31","32","33","34"],"import { time } from \"console\";\nimport { useState } from \"react\";\nimport useBehaviorSubject from \"use-behavior-subject\";\nimport \"./App.css\";\nimport { WorkSpacePlugin } from \"./Client\";\nimport { Logger } from \"./logger\";\n\n\n\nexport const client = new WorkSpacePlugin();\n\n\n\nfunction App() {\n  \n  const [dir, setDir] = useState<string>(\"hardhat\");\n  const [result,setResult] = useState<string>()\n\n  const handleChange = ({ target }: any) => {\n    setDir(target.value);\n  };\n\n  const gettime = () => {\n    return Date.now()\n  }\n\n  const test = async ()=>{\n    setResult(\"\")\n    const r = await client.soltest()\n    setResult(\"test done\")\n  }\n\n  return (\n    <div className=\"App\">\n      <div>v5</div>\n      <div>{result}</div>\n      <a href='http://nu.nl' target=\"_blank\">testlink</a>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.zip()}>zip</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspush()}>ipfs push</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspull(dir)}>ipfs pull</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfsConfig()}>ipfs config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getAccounts()}>get accounts</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setSettings()}>set settings to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getSettings()}>get settings</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await test()}>run sol test</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.highlight(dir)}>highlight</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.addAnnotation(dir)}>annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.clearAnnotations(dir)}>clear annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.open(dir)}>openfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.read(dir)}>read</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.write(dir)}>write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.switchfile(dir)}>switch to file</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcurrentfile()}>getcurrentfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.importcontent(dir)}>import content resolve</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.fetch(dir)}>api test fetch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.axios(dir)}>api test axios</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activate()}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deactivate()}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getresult()}>get compilation result</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcompilerconfig()}>get compiler config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpace()}>get workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpaces()}>get workspaces</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.createWorkSpace(dir)}>create workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitinit(dir)}>git init</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitstatus(dir)}>git status</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlog()}>git log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcommit()}>git commit</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitadd(dir)}>git add</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitremove(dir)}>git rm</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlsfiles()}>git ls files</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitreadblob(dir)}>git read blob</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitresolveref()}>git resolve head</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranches()}>git branches</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranch(dir)}>git create branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcheckout(dir)}>git checkout</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcurrentbranch()}>git current branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.qr(dir)}>qr</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.wallet()}>connect to wallet</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.connect()}>connect to wallet2</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.dapp(dir)}>connect to dapp</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.changetoinjected()}>change to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.writetoCeramic()}>ceramic write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinatapush()}>pinata write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinlist()}>pinata list</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setCallBacks()}>callbacks</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.log(\"\")}>log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activatePlugin(dir)}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deActivatePlugin(dir)}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.debug(dir)}>debug</button>\n      <input\n        type=\"text\"\n        name=\"payloadBox\"\n        placeholder=\"Enter payload here...\"\n        value={dir}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Volumes/butbut/code/testapi/plugintester/src/reportWebVitals.ts",[],{"ruleId":"35","severity":1,"message":"36","line":226,"column":15,"nodeType":"37","messageId":"38","endLine":226,"endColumn":23},{"ruleId":"35","severity":1,"message":"39","line":226,"column":25,"nodeType":"37","messageId":"38","endLine":226,"endColumn":32},{"ruleId":"35","severity":1,"message":"36","line":235,"column":15,"nodeType":"37","messageId":"38","endLine":235,"endColumn":23},{"ruleId":"35","severity":1,"message":"39","line":235,"column":25,"nodeType":"37","messageId":"38","endLine":235,"endColumn":32},{"ruleId":"35","severity":1,"message":"40","line":440,"column":9,"nodeType":"37","messageId":"38","endLine":440,"endColumn":14},{"ruleId":"35","severity":1,"message":"41","line":560,"column":9,"nodeType":"37","messageId":"38","endLine":560,"endColumn":17},{"ruleId":"35","severity":1,"message":"41","line":565,"column":9,"nodeType":"37","messageId":"38","endLine":565,"endColumn":17},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"35","severity":1,"message":"46","line":1,"column":10,"nodeType":"37","messageId":"38","endLine":1,"endColumn":14},{"ruleId":"35","severity":1,"message":"47","line":3,"column":8,"nodeType":"37","messageId":"38","endLine":3,"endColumn":26},{"ruleId":"35","severity":1,"message":"48","line":6,"column":10,"nodeType":"37","messageId":"38","endLine":6,"endColumn":16},{"ruleId":"35","severity":1,"message":"49","line":23,"column":9,"nodeType":"37","messageId":"38","endLine":23,"endColumn":16},{"ruleId":"35","severity":1,"message":"50","line":29,"column":11,"nodeType":"37","messageId":"38","endLine":29,"endColumn":12},{"ruleId":"51","severity":1,"message":"52","line":37,"column":7,"nodeType":"53","messageId":"54","endLine":37,"endColumn":46,"fix":"55"},"@typescript-eslint/no-unused-vars","'accounts' is assigned a value but never used.","Identifier","unusedVar","'chainId' is assigned a value but never used.","'files' is assigned a value but never used.","'settings' is assigned a value but never used.","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"'time' is defined but never used.","'useBehaviorSubject' is defined but never used.","'Logger' is defined but never used.","'gettime' is assigned a value but never used.","'r' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"58","text":"59"},"no-global-assign","no-unsafe-negation",[765,765]," rel=\"noreferrer\""]