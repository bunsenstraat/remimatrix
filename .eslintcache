[{"/Volumes/butbut/code/testapi/plugintester/src/Client.ts":"1","/Volumes/butbut/code/testapi/plugintester/src/index.tsx":"2","/Volumes/butbut/code/testapi/plugintester/src/App.tsx":"3","/Volumes/butbut/code/testapi/plugintester/src/reportWebVitals.ts":"4","/Volumes/butbut/code/remix-testreact/src/index.tsx":"5","/Volumes/butbut/code/remix-testreact/src/reportWebVitals.ts":"6","/Volumes/butbut/code/remix-testreact/src/App.tsx":"7","/Volumes/butbut/code/remix-testreact/src/Client.ts":"8"},{"size":16107,"mtime":1624531084000,"results":"9","hashOfConfig":"10"},{"size":520,"mtime":1617198243000,"results":"11","hashOfConfig":"10"},{"size":7249,"mtime":1622796021000,"results":"12","hashOfConfig":"10"},{"size":425,"mtime":1609233049000,"results":"13","hashOfConfig":"10"},{"size":520,"mtime":1630406755000,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1630406755000,"results":"16","hashOfConfig":"15"},{"size":7476,"mtime":1630827306000,"results":"17","hashOfConfig":"15"},{"size":17070,"mtime":1630827370000,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bh2wdb",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"17xia0h",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/butbut/code/testapi/plugintester/src/Client.ts",["39","40","41","42","43","44","45"],"/Volumes/butbut/code/testapi/plugintester/src/index.tsx",[],["46","47"],"/Volumes/butbut/code/testapi/plugintester/src/App.tsx",["48","49","50","51","52","53"],"import { time } from \"console\";\nimport { useState } from \"react\";\nimport useBehaviorSubject from \"use-behavior-subject\";\nimport \"./App.css\";\nimport { WorkSpacePlugin } from \"./Client\";\nimport { Logger } from \"./logger\";\n\n\n\nexport const client = new WorkSpacePlugin();\n\n\n\nfunction App() {\n  \n  const [dir, setDir] = useState<string>(\"hardhat\");\n  const [result,setResult] = useState<string>()\n\n  const handleChange = ({ target }: any) => {\n    setDir(target.value);\n  };\n\n  const gettime = () => {\n    return Date.now()\n  }\n\n  const test = async ()=>{\n    setResult(\"\")\n    const r = await client.soltest()\n    setResult(\"test done\")\n  }\n\n  return (\n    <div className=\"App\">\n      <div>v5</div>\n      <div>{result}</div>\n      <a href='http://nu.nl' target=\"_blank\">testlink</a>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.zip()}>zip</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspush()}>ipfs push</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspull(dir)}>ipfs pull</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfsConfig()}>ipfs config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getAccounts()}>get accounts</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setSettings()}>set settings to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getSettings()}>get settings</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await test()}>run sol test</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.highlight(dir)}>highlight</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.addAnnotation(dir)}>annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.clearAnnotations(dir)}>clear annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.open(dir)}>openfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.read(dir)}>read</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.write(dir)}>write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.switchfile(dir)}>switch to file</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcurrentfile()}>getcurrentfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.importcontent(dir)}>import content resolve</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.fetch(dir)}>api test fetch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.axios(dir)}>api test axios</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activate()}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deactivate()}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getresult()}>get compilation result</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcompilerconfig()}>get compiler config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpace()}>get workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpaces()}>get workspaces</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.createWorkSpace(dir)}>create workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitinit(dir)}>git init</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitstatus(dir)}>git status</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlog()}>git log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcommit()}>git commit</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitadd(dir)}>git add</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitremove(dir)}>git rm</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlsfiles()}>git ls files</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitreadblob(dir)}>git read blob</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitresolveref()}>git resolve head</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranches()}>git branches</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranch(dir)}>git create branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcheckout(dir)}>git checkout</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcurrentbranch()}>git current branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.qr(dir)}>qr</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.wallet()}>connect to wallet</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.connect()}>connect to wallet2</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.dapp(dir)}>connect to dapp</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.changetoinjected()}>change to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.writetoCeramic()}>ceramic write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinatapush()}>pinata write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinlist()}>pinata list</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setCallBacks()}>callbacks</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.log(\"\")}>log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activatePlugin(dir)}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deActivatePlugin(dir)}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.debug(dir)}>debug</button>\n      <input\n        type=\"text\"\n        name=\"payloadBox\"\n        placeholder=\"Enter payload here...\"\n        value={dir}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Volumes/butbut/code/testapi/plugintester/src/reportWebVitals.ts",[],"/Volumes/butbut/code/remix-testreact/src/index.tsx",[],["54","55"],"/Volumes/butbut/code/remix-testreact/src/reportWebVitals.ts",[],"/Volumes/butbut/code/remix-testreact/src/App.tsx",["56","57","58","59","60","61"],"import { time } from \"console\";\nimport { useState } from \"react\";\nimport useBehaviorSubject from \"use-behavior-subject\";\nimport \"./App.css\";\nimport { WorkSpacePlugin } from \"./Client\";\nimport { Logger } from \"./logger\";\n\n\n\nexport const client = new WorkSpacePlugin();\n\n\n\nfunction App() {\n  \n  const [dir, setDir] = useState<string>(\"hardhat\");\n  const [result,setResult] = useState<string>()\n\n  const handleChange = ({ target }: any) => {\n    setDir(target.value);\n  };\n\n  const gettime = () => {\n    return Date.now()\n  }\n\n  const test = async ()=>{\n    setResult(\"\")\n    const r = await client.soltest()\n    setResult(\"test done\")\n  }\n\n  return (\n    <div className=\"App\">\n      <div>v5</div>\n      <div>{result}</div>\n      <a href='http://nu.nl' target=\"_blank\">testlink</a>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.cancelCalls()}>cancel</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.makeQueue()}>queue</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.zip()}>zip</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspush()}>ipfs push</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspull(dir)}>ipfs pull</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfsConfig()}>ipfs config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getAccounts()}>get accounts</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setSettings()}>set settings to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getSettings()}>get settings</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await test()}>run sol test</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.highlight(dir)}>highlight</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.addAnnotation(dir)}>annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.clearAnnotations(dir)}>clear annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.open(dir)}>openfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.read(dir)}>read</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.write(dir)}>write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.switchfile(dir)}>switch to file</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcurrentfile()}>getcurrentfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.importcontent(dir)}>import content resolve</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.fetch(dir)}>api test fetch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.axios(dir)}>api test axios</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activate()}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deactivate()}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getresult()}>get compilation result</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcompilerconfig()}>get compiler config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpace()}>get workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpaces()}>get workspaces</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.createWorkSpace(dir)}>create workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitinit(dir)}>git init</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitstatus(dir)}>git status</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlog()}>git log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcommit()}>git commit</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitadd(dir)}>git add</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitremove(dir)}>git rm</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlsfiles()}>git ls files</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitreadblob(dir)}>git read blob</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitresolveref()}>git resolve head</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranches()}>git branches</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranch(dir)}>git create branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcheckout(dir)}>git checkout</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcurrentbranch()}>git current branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.qr(dir)}>qr</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.wallet()}>connect to wallet</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.connect()}>connect to wallet2</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.dapp(dir)}>connect to dapp</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.changetoinjected()}>change to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.writetoCeramic()}>ceramic write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinatapush()}>pinata write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinlist()}>pinata list</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setCallBacks()}>callbacks</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.log(\"\")}>log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activatePlugin(dir)}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deActivatePlugin(dir)}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.debug(dir)}>debug</button>\n      <input\n        type=\"text\"\n        name=\"payloadBox\"\n        placeholder=\"Enter payload here...\"\n        value={dir}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Volumes/butbut/code/remix-testreact/src/Client.ts",["62","63","64","65","66","67","68","69"],{"ruleId":"70","severity":1,"message":"71","line":226,"column":15,"nodeType":"72","messageId":"73","endLine":226,"endColumn":23},{"ruleId":"70","severity":1,"message":"74","line":226,"column":25,"nodeType":"72","messageId":"73","endLine":226,"endColumn":32},{"ruleId":"70","severity":1,"message":"71","line":235,"column":15,"nodeType":"72","messageId":"73","endLine":235,"endColumn":23},{"ruleId":"70","severity":1,"message":"74","line":235,"column":25,"nodeType":"72","messageId":"73","endLine":235,"endColumn":32},{"ruleId":"70","severity":1,"message":"75","line":440,"column":9,"nodeType":"72","messageId":"73","endLine":440,"endColumn":14},{"ruleId":"70","severity":1,"message":"76","line":560,"column":9,"nodeType":"72","messageId":"73","endLine":560,"endColumn":17},{"ruleId":"70","severity":1,"message":"76","line":565,"column":9,"nodeType":"72","messageId":"73","endLine":565,"endColumn":17},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"70","severity":1,"message":"81","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":14},{"ruleId":"70","severity":1,"message":"82","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":26},{"ruleId":"70","severity":1,"message":"83","line":6,"column":10,"nodeType":"72","messageId":"73","endLine":6,"endColumn":16},{"ruleId":"70","severity":1,"message":"84","line":23,"column":9,"nodeType":"72","messageId":"73","endLine":23,"endColumn":16},{"ruleId":"70","severity":1,"message":"85","line":29,"column":11,"nodeType":"72","messageId":"73","endLine":29,"endColumn":12},{"ruleId":"86","severity":1,"message":"87","line":37,"column":7,"nodeType":"88","messageId":"89","endLine":37,"endColumn":46,"fix":"90"},{"ruleId":"77","replacedBy":"91"},{"ruleId":"79","replacedBy":"92"},{"ruleId":"70","severity":1,"message":"81","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":14},{"ruleId":"70","severity":1,"message":"82","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":26},{"ruleId":"70","severity":1,"message":"83","line":6,"column":10,"nodeType":"72","messageId":"73","endLine":6,"endColumn":16},{"ruleId":"70","severity":1,"message":"84","line":23,"column":9,"nodeType":"72","messageId":"73","endLine":23,"endColumn":16},{"ruleId":"70","severity":1,"message":"85","line":29,"column":11,"nodeType":"72","messageId":"73","endLine":29,"endColumn":12},{"ruleId":"86","severity":1,"message":"87","line":37,"column":7,"nodeType":"88","messageId":"89","endLine":37,"endColumn":46,"fix":"93"},{"ruleId":"94","severity":1,"message":"95","line":55,"column":9,"nodeType":"96","messageId":"97","endLine":78,"endColumn":10},{"ruleId":"70","severity":1,"message":"71","line":266,"column":15,"nodeType":"72","messageId":"73","endLine":266,"endColumn":23},{"ruleId":"70","severity":1,"message":"74","line":266,"column":25,"nodeType":"72","messageId":"73","endLine":266,"endColumn":32},{"ruleId":"70","severity":1,"message":"71","line":275,"column":15,"nodeType":"72","messageId":"73","endLine":275,"endColumn":23},{"ruleId":"70","severity":1,"message":"74","line":275,"column":25,"nodeType":"72","messageId":"73","endLine":275,"endColumn":32},{"ruleId":"70","severity":1,"message":"75","line":480,"column":9,"nodeType":"72","messageId":"73","endLine":480,"endColumn":14},{"ruleId":"70","severity":1,"message":"76","line":600,"column":9,"nodeType":"72","messageId":"73","endLine":600,"endColumn":17},{"ruleId":"70","severity":1,"message":"76","line":605,"column":9,"nodeType":"72","messageId":"73","endLine":605,"endColumn":17},"@typescript-eslint/no-unused-vars","'accounts' is assigned a value but never used.","Identifier","unusedVar","'chainId' is assigned a value but never used.","'files' is assigned a value but never used.","'settings' is assigned a value but never used.","no-native-reassign",["98"],"no-negated-in-lhs",["99"],"'time' is defined but never used.","'useBehaviorSubject' is defined but never used.","'Logger' is defined but never used.","'gettime' is assigned a value but never used.","'r' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"100","text":"101"},["98"],["99"],{"range":"102","text":"101"},"no-unreachable","Unreachable code.","TryStatement","unreachableCode","no-global-assign","no-unsafe-negation",[765,765]," rel=\"noreferrer\"",[765,765]]