[{"/Volumes/butbut/code/testapi/plugintester/src/Client.ts":"1","/Volumes/butbut/code/testapi/plugintester/src/index.tsx":"2","/Volumes/butbut/code/testapi/plugintester/src/App.tsx":"3","/Volumes/butbut/code/testapi/plugintester/src/reportWebVitals.ts":"4","/Volumes/butbut/code/remix-testreact/src/index.tsx":"5","/Volumes/butbut/code/remix-testreact/src/reportWebVitals.ts":"6","/Volumes/butbut/code/remix-testreact/src/App.tsx":"7","/Volumes/butbut/code/remix-testreact/src/Client.ts":"8","/Volumes/butbut/code/remix-testreact/src/Matrix.ts":"9","/Volumes/butbut/code/remix-testreact/src/use-observable.ts":"10","/Volumes/butbut/code/remix-testreact/src/components/FileList.tsx":"11"},{"size":16107,"mtime":1624531084000,"results":"12","hashOfConfig":"13"},{"size":520,"mtime":1617198243000,"results":"14","hashOfConfig":"13"},{"size":7249,"mtime":1622796021000,"results":"15","hashOfConfig":"13"},{"size":425,"mtime":1609233049000,"results":"16","hashOfConfig":"13"},{"size":520,"mtime":1630406755000,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1630406755000,"results":"19","hashOfConfig":"18"},{"size":5556,"mtime":1633111689000,"results":"20","hashOfConfig":"18"},{"size":16815,"mtime":1633111526000,"results":"21","hashOfConfig":"18"},{"size":4332,"mtime":1633109170000,"results":"22","hashOfConfig":"18"},{"size":775,"mtime":1633098218000,"results":"23","hashOfConfig":"18"},{"size":1174,"mtime":1633112214000,"results":"24","hashOfConfig":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bh2wdb",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"17xia0h",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/butbut/code/testapi/plugintester/src/Client.ts",["51","52","53","54","55","56","57"],"/Volumes/butbut/code/testapi/plugintester/src/index.tsx",[],["58","59"],"/Volumes/butbut/code/testapi/plugintester/src/App.tsx",["60","61","62","63","64","65"],"import { time } from \"console\";\nimport { useState } from \"react\";\nimport useBehaviorSubject from \"use-behavior-subject\";\nimport \"./App.css\";\nimport { WorkSpacePlugin } from \"./Client\";\nimport { Logger } from \"./logger\";\n\n\n\nexport const client = new WorkSpacePlugin();\n\n\n\nfunction App() {\n  \n  const [dir, setDir] = useState<string>(\"hardhat\");\n  const [result,setResult] = useState<string>()\n\n  const handleChange = ({ target }: any) => {\n    setDir(target.value);\n  };\n\n  const gettime = () => {\n    return Date.now()\n  }\n\n  const test = async ()=>{\n    setResult(\"\")\n    const r = await client.soltest()\n    setResult(\"test done\")\n  }\n\n  return (\n    <div className=\"App\">\n      <div>v5</div>\n      <div>{result}</div>\n      <a href='http://nu.nl' target=\"_blank\">testlink</a>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.zip()}>zip</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspush()}>ipfs push</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspull(dir)}>ipfs pull</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfsConfig()}>ipfs config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getAccounts()}>get accounts</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setSettings()}>set settings to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getSettings()}>get settings</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await test()}>run sol test</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.highlight(dir)}>highlight</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.addAnnotation(dir)}>annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.clearAnnotations(dir)}>clear annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.open(dir)}>openfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.read(dir)}>read</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.write(dir)}>write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.switchfile(dir)}>switch to file</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcurrentfile()}>getcurrentfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.importcontent(dir)}>import content resolve</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.fetch(dir)}>api test fetch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.axios(dir)}>api test axios</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activate()}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deactivate()}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getresult()}>get compilation result</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcompilerconfig()}>get compiler config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpace()}>get workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpaces()}>get workspaces</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.createWorkSpace(dir)}>create workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitinit(dir)}>git init</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitstatus(dir)}>git status</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlog()}>git log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcommit()}>git commit</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitadd(dir)}>git add</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitremove(dir)}>git rm</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlsfiles()}>git ls files</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitreadblob(dir)}>git read blob</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitresolveref()}>git resolve head</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranches()}>git branches</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranch(dir)}>git create branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcheckout(dir)}>git checkout</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcurrentbranch()}>git current branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.qr(dir)}>qr</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.wallet()}>connect to wallet</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.connect()}>connect to wallet2</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.dapp(dir)}>connect to dapp</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.changetoinjected()}>change to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.writetoCeramic()}>ceramic write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinatapush()}>pinata write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinlist()}>pinata list</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setCallBacks()}>callbacks</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.log(\"\")}>log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activatePlugin(dir)}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deActivatePlugin(dir)}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.debug(dir)}>debug</button>\n      <input\n        type=\"text\"\n        name=\"payloadBox\"\n        placeholder=\"Enter payload here...\"\n        value={dir}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Volumes/butbut/code/testapi/plugintester/src/reportWebVitals.ts",[],"/Volumes/butbut/code/remix-testreact/src/index.tsx",[],["66","67"],"/Volumes/butbut/code/remix-testreact/src/reportWebVitals.ts",[],"/Volumes/butbut/code/remix-testreact/src/App.tsx",["68","69","70","71","72","73","74","75"],"import { time } from \"console\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useBehaviorSubject } from \"./use-observable\"\nimport \"./App.css\";\nimport { WorkSpacePlugin } from \"./Client\";\nimport { Logger } from \"./logger\";\nimport { MatrixRemix } from \"./Matrix\";\nimport { Button, Modal } from 'react-bootstrap';\nimport { IncomingFile } from \"./types/types\";\nimport { FileListViewer } from \"./components/FileList\";\nimport { async } from \"rxjs\";\n\n\nexport const client = new WorkSpacePlugin();\nexport const matrixClient = new MatrixRemix()\n\n\nfunction App() {\n  const connected = useBehaviorSubject(\n    matrixClient.connected\n  );\n  const incomingFile = useBehaviorSubject(\n    matrixClient.incomingFile\n  );\n  const [dir, setDir] = useState<string>(\"!FaLewgrNoxRxrSPmWM:matrix.org\");\n  const [result, setResult] = useState<string>()\n  const [username, setUsername] = useLocalStorage(\"usernam\", \"@filipmertens:matrix.org\")\n  const [password, setPassword] = useLocalStorage(\"password\", \"RzLIYi81!\")\n  const [autoSend,setAutoSend] = useState(false)\n  const [autoReceive,setAutoReceive] = useState(false)\n  const [incomingFiles, setIncomingFiles] = useState<IncomingFile[]>([{}])\n\n  const filesRef = useRef(incomingFiles);\n\n\n  useEffect(() => {\n    filesRef.current = incomingFiles;\n  }, [incomingFiles]);\n\n\n\n  function addNewContract(file: IncomingFile) {\n    if (\n      filesRef.current?.findIndex(\n        (el: IncomingFile) => el.url === file.url\n      ) === -1\n    ){\n      setIncomingFiles(filesRef.current.concat([{...file, hidden:false}]));\n      console.log(file, incomingFiles)\n    }\n  }\n\n  function removeFile(file: IncomingFile) {\n    let c = [...incomingFiles];\n    c = c.filter((x: IncomingFile) => {\n      return x.url !== file.url;\n    });\n    setIncomingFiles(c);\n  }\n\n  const handleChange = ({ target }: any) => {\n    setDir(target.value);\n  };\n  useEffect(() => {\n    if(incomingFile) addNewContract(incomingFile)\n  },[incomingFile]);\n\n\n  const onAutoSendChange = (event: any) => {\n    const target = event.target;\n    const value = target.checked;\n    client.autoSend = value\n    setAutoSend(value)\n  }\n\n  const onAutoReceiveChange = (event: any) => {\n    const target = event.target;\n    const value = target.checked;\n    client.autoReceive = value\n    setAutoReceive(value)\n  }\n\n  const userChange = ({ target }: any) => {\n    setUsername(target.value);\n  };\n\n  const passwordChange = ({ target }: any) => {\n    setPassword(target.value);\n  };\n\n  const connectMatrix = async () => {\n    await matrixClient.connect(username, password)\n  }\n\n  const gettime = () => {\n    return Date.now()\n  }\n\n  const test = async () => {\n    setResult(\"\")\n    const r = await client.soltest()\n    setResult(\"test done\")\n  }\n\n  return (\n\n      <div className='container-fluid'>\n        <div>Matrix for Remix</div>\n        <div>{result}</div>\n        <label>Matrix userId</label>\n        <input className=\"form-control w-100\" type='text' value={username} onChange={userChange} />\n        <label>Matrix password</label>\n        <input className=\"form-control w-100\" type='password' value={password} onChange={passwordChange} />\n        <label>Matrix roomID</label>\n        <input\n          type=\"text\"\n          name=\"payloadBox\"\n          className=\"form-control w-100\"\n          placeholder=\"Enter payload here...\"\n          value={dir}\n          onChange={handleChange}\n        />\n        <label>Automatically send files</label><input name='autosend' className='ml-2' checked={autoSend} onChange={e => onAutoSendChange(e)} type=\"checkbox\" id=\"autosend\" />\n        <br></br><label>Automatically receive files</label><input name='autoreceive' className='ml-2' checked={autoReceive} onChange={e => onAutoReceiveChange(e)} type=\"checkbox\" id=\"autoreceive\" />\n        <>\n          {connected ? <Button className='m-0 mt-1 btn btn-secondary w-100' onClick={async () => matrixClient.disconnect()}>Disconnect</Button> : <Button className='m-0 mt-1 btn btn-primary w-100' onClick={async () => connectMatrix()}>Connect</Button>}\n        </>\n        <Button className='m-0 mt-1 btn btn-primary w-100 mb-3' onClick={async () => client.createWorkSpace(\"\")}>Create empty workspace</Button>\n        <hr></hr>\n        <FileListViewer remove={removeFile} files={incomingFiles || []}></FileListViewer>\n      </div>\n\n  );\n}\n\n\n// Hook\nexport const useLocalStorage = (key: string, initialValue: any) => {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState<any>(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n\n      return initialValue;\n    }\n  });\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value: any | ((val: any) => any)) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n\n    }\n  };\n  return [storedValue, setValue] as const;\n}\nexport default App;\n","/Volumes/butbut/code/remix-testreact/src/Client.ts",["76","77","78","79","80","81","82","83","84"],"/Volumes/butbut/code/remix-testreact/src/Matrix.ts",["85"],"/Volumes/butbut/code/remix-testreact/src/use-observable.ts",[],"/Volumes/butbut/code/remix-testreact/src/components/FileList.tsx",["86","87"],{"ruleId":"88","severity":1,"message":"89","line":226,"column":15,"nodeType":"90","messageId":"91","endLine":226,"endColumn":23},{"ruleId":"88","severity":1,"message":"92","line":226,"column":25,"nodeType":"90","messageId":"91","endLine":226,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":235,"column":15,"nodeType":"90","messageId":"91","endLine":235,"endColumn":23},{"ruleId":"88","severity":1,"message":"92","line":235,"column":25,"nodeType":"90","messageId":"91","endLine":235,"endColumn":32},{"ruleId":"88","severity":1,"message":"93","line":440,"column":9,"nodeType":"90","messageId":"91","endLine":440,"endColumn":14},{"ruleId":"88","severity":1,"message":"94","line":560,"column":9,"nodeType":"90","messageId":"91","endLine":560,"endColumn":17},{"ruleId":"88","severity":1,"message":"94","line":565,"column":9,"nodeType":"90","messageId":"91","endLine":565,"endColumn":17},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"88","severity":1,"message":"99","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":14},{"ruleId":"88","severity":1,"message":"100","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":26},{"ruleId":"88","severity":1,"message":"101","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":16},{"ruleId":"88","severity":1,"message":"102","line":23,"column":9,"nodeType":"90","messageId":"91","endLine":23,"endColumn":16},{"ruleId":"88","severity":1,"message":"103","line":29,"column":11,"nodeType":"90","messageId":"91","endLine":29,"endColumn":12},{"ruleId":"104","severity":1,"message":"105","line":37,"column":7,"nodeType":"106","messageId":"107","endLine":37,"endColumn":46,"fix":"108"},{"ruleId":"95","replacedBy":"109"},{"ruleId":"97","replacedBy":"110"},{"ruleId":"88","severity":1,"message":"99","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":14},{"ruleId":"88","severity":1,"message":"101","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":16},{"ruleId":"88","severity":1,"message":"111","line":8,"column":18,"nodeType":"90","messageId":"91","endLine":8,"endColumn":23},{"ruleId":"88","severity":1,"message":"112","line":11,"column":10,"nodeType":"90","messageId":"91","endLine":11,"endColumn":15},{"ruleId":"113","severity":1,"message":"114","line":66,"column":5,"nodeType":"115","endLine":66,"endColumn":19,"suggestions":"116"},{"ruleId":"88","severity":1,"message":"102","line":95,"column":9,"nodeType":"90","messageId":"91","endLine":95,"endColumn":16},{"ruleId":"88","severity":1,"message":"117","line":99,"column":9,"nodeType":"90","messageId":"91","endLine":99,"endColumn":13},{"ruleId":"88","severity":1,"message":"103","line":101,"column":11,"nodeType":"90","messageId":"91","endLine":101,"endColumn":12},{"ruleId":"88","severity":1,"message":"118","line":14,"column":10,"nodeType":"90","messageId":"91","endLine":14,"endColumn":14},{"ruleId":"88","severity":1,"message":"119","line":16,"column":7,"nodeType":"90","messageId":"91","endLine":16,"endColumn":21},{"ruleId":"88","severity":1,"message":"89","line":267,"column":15,"nodeType":"90","messageId":"91","endLine":267,"endColumn":23},{"ruleId":"88","severity":1,"message":"92","line":267,"column":25,"nodeType":"90","messageId":"91","endLine":267,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":276,"column":15,"nodeType":"90","messageId":"91","endLine":276,"endColumn":23},{"ruleId":"88","severity":1,"message":"92","line":276,"column":25,"nodeType":"90","messageId":"91","endLine":276,"endColumn":32},{"ruleId":"88","severity":1,"message":"93","line":482,"column":9,"nodeType":"90","messageId":"91","endLine":482,"endColumn":14},{"ruleId":"88","severity":1,"message":"94","line":602,"column":9,"nodeType":"90","messageId":"91","endLine":602,"endColumn":17},{"ruleId":"88","severity":1,"message":"94","line":607,"column":9,"nodeType":"90","messageId":"91","endLine":607,"endColumn":17},{"ruleId":"88","severity":1,"message":"120","line":92,"column":15,"nodeType":"90","messageId":"91","endLine":92,"endColumn":35},{"ruleId":"88","severity":1,"message":"121","line":3,"column":18,"nodeType":"90","messageId":"91","endLine":3,"endColumn":30},{"ruleId":"88","severity":1,"message":"122","line":5,"column":19,"nodeType":"90","messageId":"91","endLine":5,"endColumn":40},"@typescript-eslint/no-unused-vars","'accounts' is assigned a value but never used.","Identifier","unusedVar","'chainId' is assigned a value but never used.","'files' is assigned a value but never used.","'settings' is assigned a value but never used.","no-native-reassign",["123"],"no-negated-in-lhs",["124"],"'time' is defined but never used.","'useBehaviorSubject' is defined but never used.","'Logger' is defined but never used.","'gettime' is assigned a value but never used.","'r' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"125","text":"126"},["123"],["124"],"'Modal' is defined but never used.","'async' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'addNewContract'. Either include it or remove the dependency array.","ArrayExpression",["127"],"'test' is assigned a value but never used.","'type' is defined but never used.","'simpleContract' is assigned a value but never used.","'content' is assigned a value but never used.","'matrixClient' is defined but never used.","'faExclamationTriangle' is defined but never used.","no-global-assign","no-unsafe-negation",[765,765]," rel=\"noreferrer\"",{"desc":"128","fix":"129"},"Update the dependencies array to be: [addNewContract, incomingFile]",{"range":"130","text":"131"},[1946,1960],"[addNewContract, incomingFile]"]