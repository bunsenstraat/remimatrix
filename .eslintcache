[{"/Volumes/butbut/code/testapi/plugintester/src/Client.ts":"1","/Volumes/butbut/code/testapi/plugintester/src/index.tsx":"2","/Volumes/butbut/code/testapi/plugintester/src/App.tsx":"3","/Volumes/butbut/code/testapi/plugintester/src/reportWebVitals.ts":"4","/Volumes/butbut/code/remix-testreact/src/index.tsx":"5","/Volumes/butbut/code/remix-testreact/src/reportWebVitals.ts":"6","/Volumes/butbut/code/remix-testreact/src/App.tsx":"7","/Volumes/butbut/code/remix-testreact/src/Client.ts":"8","/Volumes/butbut/code/remix-testreact/src/Matrix.ts":"9","/Volumes/butbut/code/remix-testreact/src/use-observable.ts":"10","/Volumes/butbut/code/remix-testreact/src/components/FileList.tsx":"11","/Volumes/butbut/code/remix-testreact/src/themes/theme.tsx":"12","/Volumes/butbut/code/remix-testreact/src/components/Rooms.tsx":"13","/Volumes/butbut/code/remix-testreact/src/components/RoomSearch.tsx":"14","/Volumes/butbut/code/remix-testreact/src/components/CreateRoom.tsx":"15"},{"size":16107,"mtime":1624531084000,"results":"16","hashOfConfig":"17"},{"size":520,"mtime":1617198243000,"results":"18","hashOfConfig":"17"},{"size":7249,"mtime":1622796021000,"results":"19","hashOfConfig":"17"},{"size":425,"mtime":1609233049000,"results":"20","hashOfConfig":"17"},{"size":1231,"mtime":1633366236000,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1633366236000,"results":"23","hashOfConfig":"22"},{"size":11250,"mtime":1633972033000,"results":"24","hashOfConfig":"22"},{"size":17214,"mtime":1633970467000,"results":"25","hashOfConfig":"22"},{"size":10544,"mtime":1633970735000,"results":"26","hashOfConfig":"22"},{"size":775,"mtime":1633366236000,"results":"27","hashOfConfig":"22"},{"size":2988,"mtime":1633971868000,"results":"28","hashOfConfig":"22"},{"size":173,"mtime":1633366236000,"results":"29","hashOfConfig":"22"},{"size":1347,"mtime":1633366236000,"results":"30","hashOfConfig":"22"},{"size":1945,"mtime":1633375034000,"results":"31","hashOfConfig":"22"},{"size":2148,"mtime":1633366236000,"results":"32","hashOfConfig":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"bh2wdb",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"17xia0h",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"45"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"45"},"/Volumes/butbut/code/testapi/plugintester/src/Client.ts",["70","71","72","73","74","75","76"],"/Volumes/butbut/code/testapi/plugintester/src/index.tsx",[],["77","78"],"/Volumes/butbut/code/testapi/plugintester/src/App.tsx",["79","80","81","82","83","84"],"import { time } from \"console\";\nimport { useState } from \"react\";\nimport useBehaviorSubject from \"use-behavior-subject\";\nimport \"./App.css\";\nimport { WorkSpacePlugin } from \"./Client\";\nimport { Logger } from \"./logger\";\n\n\n\nexport const client = new WorkSpacePlugin();\n\n\n\nfunction App() {\n  \n  const [dir, setDir] = useState<string>(\"hardhat\");\n  const [result,setResult] = useState<string>()\n\n  const handleChange = ({ target }: any) => {\n    setDir(target.value);\n  };\n\n  const gettime = () => {\n    return Date.now()\n  }\n\n  const test = async ()=>{\n    setResult(\"\")\n    const r = await client.soltest()\n    setResult(\"test done\")\n  }\n\n  return (\n    <div className=\"App\">\n      <div>v5</div>\n      <div>{result}</div>\n      <a href='http://nu.nl' target=\"_blank\">testlink</a>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.zip()}>zip</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspush()}>ipfs push</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfspull(dir)}>ipfs pull</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.ipfsConfig()}>ipfs config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getAccounts()}>get accounts</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setSettings()}>set settings to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getSettings()}>get settings</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await test()}>run sol test</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.highlight(dir)}>highlight</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.addAnnotation(dir)}>annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.clearAnnotations(dir)}>clear annotation</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.open(dir)}>openfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.read(dir)}>read</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.write(dir)}>write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.switchfile(dir)}>switch to file</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcurrentfile()}>getcurrentfile</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.importcontent(dir)}>import content resolve</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.fetch(dir)}>api test fetch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.axios(dir)}>api test axios</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activate()}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deactivate()}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getresult()}>get compilation result</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getcompilerconfig()}>get compiler config</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpace()}>get workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.getWorkSpaces()}>get workspaces</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.createWorkSpace(dir)}>create workspace</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitinit(dir)}>git init</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitstatus(dir)}>git status</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlog()}>git log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcommit()}>git commit</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitadd(dir)}>git add</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitremove(dir)}>git rm</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitlsfiles()}>git ls files</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitreadblob(dir)}>git read blob</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitresolveref()}>git resolve head</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranches()}>git branches</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitbranch(dir)}>git create branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcheckout(dir)}>git checkout</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.gitcurrentbranch()}>git current branch</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.qr(dir)}>qr</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.wallet()}>connect to wallet</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.connect()}>connect to wallet2</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.dapp(dir)}>connect to dapp</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.changetoinjected()}>change to injected</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.writetoCeramic()}>ceramic write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinatapush()}>pinata write</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.pinlist()}>pinata list</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.setCallBacks()}>callbacks</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.log(\"\")}>log</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.activatePlugin(dir)}>activate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.deActivatePlugin(dir)}>deactivate</button>\n      <button className='btn btn-primary btn-sm'  onClick={async () => await client.debug(dir)}>debug</button>\n      <input\n        type=\"text\"\n        name=\"payloadBox\"\n        placeholder=\"Enter payload here...\"\n        value={dir}\n        onChange={handleChange}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Volumes/butbut/code/testapi/plugintester/src/reportWebVitals.ts",[],"/Volumes/butbut/code/remix-testreact/src/index.tsx",[],["85","86"],"/Volumes/butbut/code/remix-testreact/src/reportWebVitals.ts",[],"/Volumes/butbut/code/remix-testreact/src/App.tsx",["87","88","89","90","91","92","93","94","95","96","97","98"],"/Volumes/butbut/code/remix-testreact/src/Client.ts",["99","100","101","102","103","104","105","106","107"],"/Volumes/butbut/code/remix-testreact/src/Matrix.ts",["108","109"],"import axios from \"axios\";\nimport * as sdk from \"matrix-js-sdk\";\nimport { MatrixEvent, Room, RoomMember } from \"matrix-js-sdk\";\nimport { Visibility } from \"matrix-js-sdk/lib/@types/partials\";\nimport { Alert, AlertProps } from \"react-bootstrap\";\nimport { Variant } from \"react-bootstrap/esm/types\";\nimport { BehaviorSubject } from \"rxjs\";\nimport { client } from \"./App\";\nimport { IncomingFile } from \"./types/types\";\n\nexport type Message = {\n    content?: string,\n    type?: Variant\n}\n\nexport class MatrixRemix {\n    matrixclient: sdk.MatrixClient\n    accessToken: any = \"\"\n    roomId = \"\";\n    username: string = \"\"\n    connected = new BehaviorSubject<boolean>(false);\n    message = new BehaviorSubject<Message>({})\n    incomingFile = new BehaviorSubject<IncomingFile>({})\n    myRooms = new BehaviorSubject<Room[] | undefined>(undefined)\n\n    constructor() {\n        this.matrixclient = sdk.createClient(\"https://matrix.org\");\n    }\n\n    async searchRooms(query: string) {\n        console.log('search', query)\n        this.message.next({ content: 'searching', type: 'info' })\n        let searchrooms = await this.matrixclient.publicRooms({ filter: { generic_search_term: query } })\n        console.log(searchrooms)\n        this.message.next({ content: '', type: 'info' })\n        return searchrooms\n    }\n\n    async setRoomId(id: string) {\n        this.roomId = id\n        this.incomingFile.next({})\n\n    }\n\n    async createroom(name: string, room_alias_name: string, topic: string, visibility: Visibility) {\n        try {\n            let room_id = await this.matrixclient.createRoom({\n                visibility,\n                name,\n                room_alias_name,\n                topic\n            })\n            await this.matrixclient.setGuestAccess(room_id.room_id, {\n                allowJoin: true,\n                allowRead: true\n            })\n            this.syncrooms()\n        } catch (e) {\n            this.message.next({\n                content: e.message,\n                type: 'warning'\n            })\n        }\n    }\n\n    async leaveroom() {\n        this.message.next({ content: 'Leaving...', type: 'info' })\n        await this.matrixclient.leave(this.roomId)\n\n        this.syncrooms()\n    }\n\n    syncrooms() {\n        let me = this\n        this.message.next({ content: 'Waiting for rooms...', type: 'info' })\n        this.matrixclient.once('sync', async function (state, prevState, res) {\n            console.log(state); // state will be 'PREPARED' when the client is ready to use\n            me.connected.next(true)\n            let rooms = me.matrixclient.getRooms()\n            me.myRooms.next(rooms)\n            try {\n                me.roomId = rooms[0].roomId\n                console.log('found rooms', rooms)\n                me.message.next({})\n            } catch (e) {\n                me.roomId = ''\n                me.message.next({\n                    content: 'no rooms found',\n                    type: 'warning'\n                })\n            }\n        });\n    }\n\n    async joinroom(id: string) {\n        try {\n            await this.matrixclient.joinRoom(id)\n            this.syncrooms()\n        } catch (e) {\n            console.log(e.message)\n            this.message.next({\n                content: e.message,\n                type: 'warning'\n            })\n        }\n    }\n\n    async startClient() {\n        let me = this\n        this.matrixclient.startClient({});\n        this.syncrooms()\n        this.matrixclient.on(\"Room.timeline\", async function (event: MatrixEvent, room, toStartOfTimeline) {\n            console.log(event)\n            console.log(event.getRoomId(), me.roomId)\n            // we know we only want to respond to messages\n            if (event.getType() !== \"m.room.message\") {\n                return;\n            }\n            //if (rooms.findIndex((r:Room) => r.roomId === event.getRoomId())>-1) {\n            const member: RoomMember = event.sender\n            const event_id: string = event.getId()\n\n            if (member.userId !== me.username || true) {\n\n                //console.log(event.event.content && event.event.content.body)\n                //console.log(event.getType())\n                if (event.event.content && me.accessToken) {\n                    if (event.event.content.msgtype === 'm.file') {\n                        let parsed: string | null = await me.matrixclient.mxcUrlToHttp(event.event.content.url)\n                        console.log(parsed);\n                        if (parsed) {\n                            const data = await axios.get(parsed)\n                            ///console.log(data.data)\n                            if (!client.autoReceive) {\n                                me.incomingFile.next({\n                                    fileName: event.event.content.body,\n                                    body: data.data,\n                                    url: event.event.content.url,\n                                    userId: member.userId,\n                                    event_id: event_id,\n                                    type: event.event.content.msgtype,\n                                    timestamp: event.event.origin_server_ts || 0,\n                                    roomId: event.getRoomId()\n                                })\n                            } else {\n                                client.write(event.event.content.body, data.data)\n                            }\n\n                        }\n                    }\n\n                }\n                //    client.write(event.event.content.filename, event.event.content.body)\n            }\n            if (event && event.event && event.event.content && event.event.content.msgtype === 'm.text') {\n\n\n                me.incomingFile.next({\n                    fileName: '',\n                    body: '',\n                    url: '',\n                    userId: member.userId,\n                    event_id: event_id,\n                    type: event.event.content.msgtype,\n                    timestamp: event.event.origin_server_ts || 0,\n                    message: event.getContent().body,\n                    roomId: event.getRoomId()\n                })\n            }\n            if (event && event.event && event.event.content && event.event.content.membership === 'join') {\n\n\n                me.incomingFile.next({\n                    fileName: '',\n                    body: '',\n                    url: '',\n                    userId: member.userId,\n                    event_id: event_id,\n                    type: \"m.text\",\n                    timestamp: event.event.origin_server_ts || 0,\n                    message: event.event.content.displayname + \" joined\",\n                    roomId: event.getRoomId()\n                })\n            }\n            //}\n        });\n\n    }\n\n    async disconnect() {\n        await this.matrixclient.stopClient()\n        this.accessToken = null\n        this.connected.next(false)\n        this.roomId = ''\n        this.myRooms.next([])\n        this.message.next({ content: 'disconnected', type: 'info' })\n    }\n\n    async guestlogin(){\n        this.matrixclient = sdk.createClient(\"https://matrix.org\");\n        const { user_id, device_id, access_token } = await this.matrixclient.registerGuest({});\n        this.matrixclient = sdk.createClient({\n           baseUrl: \"https://matrix.org\",\n           accessToken: access_token,\n           userId: user_id,\n           deviceId: device_id,\n        })\n        this.matrixclient.setGuest(true);\n        this.accessToken = access_token\n        this.username = user_id\n        console.log(access_token, user_id)\n        //this.username = this.matrixclient.getUser(user_id).displayName\n        await this.startClient()\n    }\n\n    async connect(username: string, password: string) {\n        this.matrixclient = sdk.createClient(\"https://matrix.org\");\n        try {\n            this.roomId = ''\n            this.myRooms.next([])\n            this.message.next({ content: 'connecting', type: 'info' })\n            console.log('connecting')\n            const response = await this.matrixclient.login(\"m.login.password\", { \"user\": username, \"password\": password })\n            console.log(response)\n            this.accessToken = response\n            console.log(this.accessToken)\n            client.feedback.next(this.accessToken)\n            this.username = username\n            await this.startClient()\n        } catch (e) {\n            this.message.next({\n                content: e.message,\n                type: 'warning'\n            })\n        }\n    }\n\n    async connectToken(username: string, token: string) {\n        this.matrixclient = sdk.createClient(\"https://matrix.org\");\n        try {\n            this.roomId = ''\n            this.myRooms.next([])\n            this.message.next({ content: 'connecting', type: 'info' })\n            console.log('connecting')\n            const response = await this.matrixclient.loginWithToken(token)   //.login(\"m.login.token\", { \"user\": username, \"token\": token })\n            console.log(response)\n            this.accessToken = response\n            console.log(this.accessToken)\n            client.feedback.next(this.accessToken)\n            this.username = response.user_id\n            await this.startClient()\n        } catch (e) {\n            console.log(e.message)\n            this.message.next({\n                content: e.message,\n                type: 'warning'\n            })\n        }\n    }\n\n    async sendAlert(msg: Message){\n        this.message.next(msg)\n    }\n\n    async sendmessage(body: string) {\n        if (!this.accessToken) return\n        const content: sdk.IContent = {\n            \"body\": body,\n            \"msgtype\": \"m.text\",\n        }\n        this.matrixclient.sendEvent(this.roomId, \"m.room.message\", content, \"\").then((res) => {\n            // message sent successfully\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    async sendFile(path: string, body: string) {\n        console.log(this.accessToken)\n        if (!this.accessToken) return\n        console.log('send file', path)\n        const mcxUrl: string = await this.matrixclient.uploadContent(body, { name: path })\n        console.log(mcxUrl)\n\n        const fileObject = {\n            \"body\": path,\n            \"filename\": path,\n            \"msgtype\": \"m.file\",\n            \"url\": mcxUrl\n        }\n\n        this.matrixclient.sendEvent(this.roomId, \"m.room.message\", fileObject, \"\").then((res) => {\n            // message sent successfully\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n}","/Volumes/butbut/code/remix-testreact/src/use-observable.ts",[],"/Volumes/butbut/code/remix-testreact/src/components/FileList.tsx",["110","111","112","113"],"/Volumes/butbut/code/remix-testreact/src/themes/theme.tsx",[],"/Volumes/butbut/code/remix-testreact/src/components/Rooms.tsx",["114","115","116","117","118","119","120","121","122","123"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { client, matrixClient } from \"../App\";\nimport { faTrash, faExclamationTriangle, faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Room } from \"matrix-js-sdk\";\nimport SelectSearch, { SelectSearchOption } from 'react-select-search';\nimport { useBehaviorSubject } from \"../use-observable\";\n\ninterface RoomProps {\n    rooms: Room[]\n}\n\nexport const RoomSelector: React.FC<RoomProps> = (rooms) => {\n    let myRooms = useBehaviorSubject(matrixClient.myRooms)\n\n    const selectRoom = (event:any) => {\n        console.log(event.target.value)\n        matrixClient.setRoomId(event.target.value)\n    }\n\n    return(<>\n        <Form>\n        <Form.Group controlId=\"exampleForm.SelectCustom\">\n            <Form.Label>Select Room</Form.Label>\n            <Form.Control onChange={selectRoom} as=\"select\" custom>\n            {myRooms?.map((r:Room)=>{\n                return (\n                    <option value={r.roomId}>{r.name}</option>\n                )\n            })}\n            </Form.Control>\n            <div onClick={async()=> await matrixClient.leaveroom() } className='badge bagde-secondary'>leave room</div>\n        </Form.Group>\n        </Form>\n        \n    </>)\n}","/Volumes/butbut/code/remix-testreact/src/components/RoomSearch.tsx",["124","125","126","127","128","129","130","131","132","133","134","135","136","137"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Dropdown, Form } from \"react-bootstrap\";\nimport { client, matrixClient } from \"../App\";\nimport { faTrash, faExclamationTriangle, faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IPublicRoomsChunkRoom, Room } from \"matrix-js-sdk\";\nimport SelectSearch, { SelectSearchOption } from 'react-select-search';\nimport { useBehaviorSubject } from \"../use-observable\";\n\nimport './RoomSearch.css'\nimport { async } from \"rxjs\";\n\nexport const RoomSearch: React.FC<any> = (props) => {\n    const [rooms, setRooms] = useState<IPublicRoomsChunkRoom[]>([])\n    const [query, setQuery] = useState<string>(\"\")\n    const selectRoom = (event: any) => {\n        console.log(event.target.value)\n        matrixClient.setRoomId(event.target.value)\n    }\n    \n    const handleChange = ({ target }: any) => {\n        setQuery(target.value);\n      };\n\n    const searchroom = async (event:any) => {\n        event.preventDefault();   \n        let result = await matrixClient.searchRooms(query)\n        console.log(result.chunk)\n        setRooms(result.chunk)     \n    }\n\n    const joinroom = async(room_id: string) => {\n        setRooms([])\n        await matrixClient.joinroom(room_id)\n    }\n\n    return (<>\n        <form onSubmit={searchroom}>\n            <Form.Label>Search rooms</Form.Label>\n            <input placeholder='Hit ENTER to search a room' className='form-control w-100' type=\"text\" onChange={handleChange} />\n            <div onClick={async()=> { setRooms([]); }} className='badge bagde-secondary'>clear search</div>\n        </form>\n        <ul className='pl-0'>\n            {rooms.map((room)=>{\n                return(<li className='pl-0'><div onClick={async() => joinroom(room.room_id)} className='badge badge-primary mr-2'>Join room</div>{room.name}</li>)\n            })}\n            \n        </ul>\n    </>)\n}","/Volumes/butbut/code/remix-testreact/src/components/CreateRoom.tsx",["138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"import React, { useEffect, useState } from \"react\";\nimport { Button, Dropdown, Form } from \"react-bootstrap\";\nimport { client, matrixClient } from \"../App\";\nimport { faTrash, faExclamationTriangle, faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IPublicRoomsChunkRoom, Room } from \"matrix-js-sdk\";\nimport SelectSearch, { SelectSearchOption } from 'react-select-search';\nimport { useBehaviorSubject } from \"../use-observable\";\n\nimport './RoomSearch.css'\nimport { async } from \"rxjs\";\nimport { Visibility } from \"matrix-js-sdk/lib/@types/partials\";\n\nexport const CreateRoom: React.FC<any> = (props) => {\n\n    const [name, setName] = useState<string>(\"\")\n    const [alias, setAlias] = useState<string>(\"\")\n    const [visibility, setVisibility] = useState<Visibility>(Visibility.Public)\n    \n    const handleChange = ({ target }: any) => {\n        setName(target.value);\n    };\n\n    const handleChangeAlias = ({ target }: any) => {\n        setAlias(target.value);\n    };\n\n    const visChange = (vis: Visibility) => {\n        setVisibility(vis);\n    };\n\n    const createRoom = async () => {\n        await matrixClient.createroom(name, alias, \"\", visibility)\n\n    }\n\n    return (<>\n        <Form>\n            <Form.Label>Create Room</Form.Label>\n            <input placeholder='name eg. myroom' className='form-control w-100' type=\"text\" onChange={handleChange} />\n            <input placeholder='alias eg myroom' className='form-control w-100' type=\"text\" onChange={handleChangeAlias} />\n            <Form.Label>visibility</Form.Label>\n            <input checked={visibility===Visibility.Public} onChange={async () => visChange(Visibility.Public)} type=\"radio\" className='mr-2 ml-2' value='public' name=\"vis\" />public\n            <input checked={visibility===Visibility.Private} onChange={async () => visChange(Visibility.Private)} type=\"radio\" className='mr-2 ml-2' value='public' name=\"vis\" />private\n            <br></br>\n            <div onClick={async()=> await createRoom() } className='btn btn-sm btn-secondary'>create room</div>\n        </Form><hr></hr>\n    </>)\n}",{"ruleId":"152","severity":1,"message":"153","line":226,"column":15,"nodeType":"154","messageId":"155","endLine":226,"endColumn":23},{"ruleId":"152","severity":1,"message":"156","line":226,"column":25,"nodeType":"154","messageId":"155","endLine":226,"endColumn":32},{"ruleId":"152","severity":1,"message":"153","line":235,"column":15,"nodeType":"154","messageId":"155","endLine":235,"endColumn":23},{"ruleId":"152","severity":1,"message":"156","line":235,"column":25,"nodeType":"154","messageId":"155","endLine":235,"endColumn":32},{"ruleId":"152","severity":1,"message":"157","line":440,"column":9,"nodeType":"154","messageId":"155","endLine":440,"endColumn":14},{"ruleId":"152","severity":1,"message":"158","line":560,"column":9,"nodeType":"154","messageId":"155","endLine":560,"endColumn":17},{"ruleId":"152","severity":1,"message":"158","line":565,"column":9,"nodeType":"154","messageId":"155","endLine":565,"endColumn":17},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"152","severity":1,"message":"163","line":1,"column":10,"nodeType":"154","messageId":"155","endLine":1,"endColumn":14},{"ruleId":"152","severity":1,"message":"164","line":3,"column":8,"nodeType":"154","messageId":"155","endLine":3,"endColumn":26},{"ruleId":"152","severity":1,"message":"165","line":6,"column":10,"nodeType":"154","messageId":"155","endLine":6,"endColumn":16},{"ruleId":"152","severity":1,"message":"166","line":23,"column":9,"nodeType":"154","messageId":"155","endLine":23,"endColumn":16},{"ruleId":"152","severity":1,"message":"167","line":29,"column":11,"nodeType":"154","messageId":"155","endLine":29,"endColumn":12},{"ruleId":"168","severity":1,"message":"169","line":37,"column":7,"nodeType":"170","messageId":"171","endLine":37,"endColumn":46,"fix":"172"},{"ruleId":"159","replacedBy":"173"},{"ruleId":"161","replacedBy":"174"},{"ruleId":"152","severity":1,"message":"165","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":16},{"ruleId":"152","severity":1,"message":"175","line":7,"column":54,"nodeType":"154","messageId":"155","endLine":7,"endColumn":59},{"ruleId":"152","severity":1,"message":"176","line":10,"column":10,"nodeType":"154","messageId":"155","endLine":10,"endColumn":15},{"ruleId":"152","severity":1,"message":"177","line":36,"column":10,"nodeType":"154","messageId":"155","endLine":36,"endColumn":16},{"ruleId":"152","severity":1,"message":"178","line":45,"column":21,"nodeType":"154","messageId":"155","endLine":45,"endColumn":33},{"ruleId":"179","severity":1,"message":"180","line":66,"column":6,"nodeType":"181","endLine":66,"endColumn":8,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"183","line":97,"column":6,"nodeType":"181","endLine":97,"endColumn":20,"suggestions":"184"},{"ruleId":"152","severity":1,"message":"166","line":134,"column":9,"nodeType":"154","messageId":"155","endLine":134,"endColumn":16},{"ruleId":"152","severity":1,"message":"185","line":138,"column":9,"nodeType":"154","messageId":"155","endLine":138,"endColumn":13},{"ruleId":"152","severity":1,"message":"167","line":140,"column":11,"nodeType":"154","messageId":"155","endLine":140,"endColumn":12},{"ruleId":"168","severity":1,"message":"169","line":203,"column":11,"nodeType":"170","messageId":"171","endLine":203,"endColumn":74,"fix":"186"},{"ruleId":"168","severity":1,"message":"169","line":204,"column":11,"nodeType":"170","messageId":"171","endLine":204,"endColumn":86,"fix":"187"},{"ruleId":"152","severity":1,"message":"188","line":14,"column":10,"nodeType":"154","messageId":"155","endLine":14,"endColumn":14},{"ruleId":"152","severity":1,"message":"189","line":16,"column":7,"nodeType":"154","messageId":"155","endLine":16,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":273,"column":15,"nodeType":"154","messageId":"155","endLine":273,"endColumn":23},{"ruleId":"152","severity":1,"message":"156","line":273,"column":25,"nodeType":"154","messageId":"155","endLine":273,"endColumn":32},{"ruleId":"152","severity":1,"message":"153","line":282,"column":15,"nodeType":"154","messageId":"155","endLine":282,"endColumn":23},{"ruleId":"152","severity":1,"message":"156","line":282,"column":25,"nodeType":"154","messageId":"155","endLine":282,"endColumn":32},{"ruleId":"152","severity":1,"message":"157","line":488,"column":9,"nodeType":"154","messageId":"155","endLine":488,"endColumn":14},{"ruleId":"152","severity":1,"message":"158","line":615,"column":9,"nodeType":"154","messageId":"155","endLine":615,"endColumn":17},{"ruleId":"152","severity":1,"message":"158","line":620,"column":9,"nodeType":"154","messageId":"155","endLine":620,"endColumn":17},{"ruleId":"152","severity":1,"message":"190","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":15},{"ruleId":"152","severity":1,"message":"191","line":5,"column":17,"nodeType":"154","messageId":"155","endLine":5,"endColumn":27},{"ruleId":"152","severity":1,"message":"192","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":17},{"ruleId":"152","severity":1,"message":"193","line":5,"column":19,"nodeType":"154","messageId":"155","endLine":5,"endColumn":40},{"ruleId":"152","severity":1,"message":"194","line":5,"column":42,"nodeType":"154","messageId":"155","endLine":5,"endColumn":51},{"ruleId":"152","severity":1,"message":"195","line":5,"column":53,"nodeType":"154","messageId":"155","endLine":5,"endColumn":61},{"ruleId":"152","severity":1,"message":"196","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"197","line":1,"column":28,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"152","severity":1,"message":"198","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"199","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":16},{"ruleId":"152","severity":1,"message":"192","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":17},{"ruleId":"152","severity":1,"message":"193","line":4,"column":19,"nodeType":"154","messageId":"155","endLine":4,"endColumn":40},{"ruleId":"152","severity":1,"message":"194","line":4,"column":42,"nodeType":"154","messageId":"155","endLine":4,"endColumn":51},{"ruleId":"152","severity":1,"message":"200","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":25},{"ruleId":"152","severity":1,"message":"201","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":20},{"ruleId":"152","severity":1,"message":"202","line":7,"column":24,"nodeType":"154","messageId":"155","endLine":7,"endColumn":42},{"ruleId":"152","severity":1,"message":"196","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"198","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"203","line":2,"column":18,"nodeType":"154","messageId":"155","endLine":2,"endColumn":26},{"ruleId":"152","severity":1,"message":"199","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":16},{"ruleId":"152","severity":1,"message":"192","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":17},{"ruleId":"152","severity":1,"message":"193","line":4,"column":19,"nodeType":"154","messageId":"155","endLine":4,"endColumn":40},{"ruleId":"152","severity":1,"message":"194","line":4,"column":42,"nodeType":"154","messageId":"155","endLine":4,"endColumn":51},{"ruleId":"152","severity":1,"message":"200","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":25},{"ruleId":"152","severity":1,"message":"204","line":6,"column":33,"nodeType":"154","messageId":"155","endLine":6,"endColumn":37},{"ruleId":"152","severity":1,"message":"201","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":20},{"ruleId":"152","severity":1,"message":"202","line":7,"column":24,"nodeType":"154","messageId":"155","endLine":7,"endColumn":42},{"ruleId":"152","severity":1,"message":"164","line":8,"column":10,"nodeType":"154","messageId":"155","endLine":8,"endColumn":28},{"ruleId":"152","severity":1,"message":"176","line":11,"column":10,"nodeType":"154","messageId":"155","endLine":11,"endColumn":15},{"ruleId":"152","severity":1,"message":"205","line":16,"column":11,"nodeType":"154","messageId":"155","endLine":16,"endColumn":21},{"ruleId":"152","severity":1,"message":"196","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":26},{"ruleId":"152","severity":1,"message":"198","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"203","line":2,"column":18,"nodeType":"154","messageId":"155","endLine":2,"endColumn":26},{"ruleId":"152","severity":1,"message":"199","line":3,"column":10,"nodeType":"154","messageId":"155","endLine":3,"endColumn":16},{"ruleId":"152","severity":1,"message":"192","line":4,"column":10,"nodeType":"154","messageId":"155","endLine":4,"endColumn":17},{"ruleId":"152","severity":1,"message":"193","line":4,"column":19,"nodeType":"154","messageId":"155","endLine":4,"endColumn":40},{"ruleId":"152","severity":1,"message":"194","line":4,"column":42,"nodeType":"154","messageId":"155","endLine":4,"endColumn":51},{"ruleId":"152","severity":1,"message":"200","line":5,"column":10,"nodeType":"154","messageId":"155","endLine":5,"endColumn":25},{"ruleId":"152","severity":1,"message":"206","line":6,"column":10,"nodeType":"154","messageId":"155","endLine":6,"endColumn":31},{"ruleId":"152","severity":1,"message":"204","line":6,"column":33,"nodeType":"154","messageId":"155","endLine":6,"endColumn":37},{"ruleId":"152","severity":1,"message":"201","line":7,"column":8,"nodeType":"154","messageId":"155","endLine":7,"endColumn":20},{"ruleId":"152","severity":1,"message":"202","line":7,"column":24,"nodeType":"154","messageId":"155","endLine":7,"endColumn":42},{"ruleId":"152","severity":1,"message":"164","line":8,"column":10,"nodeType":"154","messageId":"155","endLine":8,"endColumn":28},{"ruleId":"152","severity":1,"message":"176","line":11,"column":10,"nodeType":"154","messageId":"155","endLine":11,"endColumn":15},"@typescript-eslint/no-unused-vars","'accounts' is assigned a value but never used.","Identifier","unusedVar","'chainId' is assigned a value but never used.","'files' is assigned a value but never used.","'settings' is assigned a value but never used.","no-native-reassign",["207"],"no-negated-in-lhs",["208"],"'time' is defined but never used.","'useBehaviorSubject' is defined but never used.","'Logger' is defined but never used.","'gettime' is assigned a value but never used.","'r' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"209","text":"210"},["207"],["208"],"'Modal' is defined but never used.","'async' is defined but never used.","'result' is assigned a value but never used.","'setActiveKey' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoginToken'. Either include it or remove the dependency array.","ArrayExpression",["211"],"React Hook useEffect has a missing dependency: 'addNewContract'. Either include it or remove the dependency array.",["212"],"'test' is assigned a value but never used.",{"range":"213","text":"210"},{"range":"214","text":"210"},"'type' is defined but never used.","'simpleContract' is assigned a value but never used.","'Alert' is defined but never used.","'AlertProps' is defined but never used.","'faTrash' is defined but never used.","'faExclamationTriangle' is defined but never used.","'faDiceD20' is defined but never used.","'faFolder' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'client' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'SelectSearch' is defined but never used.","'SelectSearchOption' is defined but never used.","'Dropdown' is defined but never used.","'Room' is defined but never used.","'selectRoom' is assigned a value but never used.","'IPublicRoomsChunkRoom' is defined but never used.","no-global-assign","no-unsafe-negation",[765,765]," rel=\"noreferrer\"",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},[6319,6319],[6417,6417],"Update the dependencies array to be: [setLoginToken]",{"range":"219","text":"220"},"Update the dependencies array to be: [addNewContract, incomingFile]",{"range":"221","text":"222"},[2360,2362],"[setLoginToken]",[3154,3168],"[addNewContract, incomingFile]"]